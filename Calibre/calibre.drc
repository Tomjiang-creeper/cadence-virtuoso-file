// *****************************************************************************
// * 0.18um Calibre DRC COMMAND FILE - CL18S3_6M.25b 07/05/2004  *
// * FOR TSMC 0.18UM LOGIC 1P6M SALICIDE 1.8V/3.3V PROCESS                     *
// * (DESIGN RULE DOCUMENT: T-018-LO-DR-001 Rev2.5)                            *
// *****************************************************************************
//

//
//  DISCLAIMER
//
//  The information contained herein is provided by TSMC on an "AS IS" basis
//  without any warranty, and TSMC has no obligation to support or otherwise
//  maintain the information.  TSMC disclaims any representation that the
//  information does not infringe any intellectual property rights or proprietary
//  rights of any third parties.  There are no other warranties given by TSMC,
//  whether express, implied or statutory, including, without limitation, implied
//  warranties of merchantability and fitness for a particular purpose.
//
//  STATEMENT OF USE
//
//  This information contains confidential and proprietary information of TSMC.
//  No part of this information may be reproduced, transmitted, transcribed,
//  stored in a retrieval system, or translated into any human or computer
//  language, in any form or by any means, electronic, mechanical, magnetic,
//  optical, chemical, manual, or otherwise, without the prior written permission
//  of TSMC.  This information was prepared for informational purpose and is for
//  use by TSMC's customers only.  TSMC reserves the right to make changes in the
//  information at any time and without notice.
//
//-----------------------------------------------------------------------------------
//
//  NOTICE: (Read Me First!)
//
//  1. If the input GDS file does not include all the layers in the
//     INPUT LAYER BLOCK, for example, they are generated by logic
//     operations, please make sure the consistence with original
//     layer definition.
//  2. The runset is tested and developed on Calibre ver 9.1_2.1 (Feb, 2002), please use this or
//     newer version of Calibre to execute this runset.

//----------------------------------------------------------------------------------------
//
// REVISION:
// 
// 2.0a 04/27/00 T.C.Chiang  1) add NW resistor space to NW
//                           2) PO.R.1 modofied
//                           3) combine implant check such like N2V.C.4/N2V.E.5 -> N2V.C.4
//                           4) CO.S.2 relax to be applied larger than 3x3
//                           5) CO.C.2  0.21 -> 0.20
//                           6) IO ESD guideline  ESD.4/ESD.5
//                           7) ESD.S.2/ESD.C.1/ESD.C.4
//                           8) Add RPO.C.6
//                           9) Add fuse rule
//                           10) remove CB rules - only check basic CB rule
// 2.0b 06/20/00 T.C.Chiang  1) modify N2V/P2V/N3V/P3V as drawn layers
//                           2) revise wide metal check Mx.S.2
//                           3) rename input layer names as document T-018-LO-LE-003
//                           4) revise PO.R.1B
//                           5) revise N2V.C.1/N3V.C.1/P2V.C.1/P3V.C.1/NP.C.1/PP.C.1
//                           6) add option to set different grid check
//                           7) NTAP definition exclude well resistor OD
// 2.0c 08/04/00 T.C.Chiang  1) revise N3V.E.1
//                           2) remove undefined check N3V.E.2
//                           3) revise ESD.C.4
//                           4) rename NT_N.E.2 to NT_N.PO.1
//                           5) revise PO.R.2 check
// 2.1a 09/28/00 Kevin Liu
//      Rule Changed: NWR.C.2/OD.W.3/PO.R.2/FUSE.M/LAT.2/ESD.5/ESD.9
//      Layer Removed: N2V/N3V/P2V/P3V
//      Revise Checked:
//              1) LAT.3P/LAT.3N
//              2) OD2.E.2
//              3) IO ESD rules
//              4) nwel space check by connectivity
//      Added Check: metal slot rule
// 2.1b 10/17/00 Kevin Liu
//	 Check Added: FUSE.J
// 2.1c 11/15/00 Kevin Liu
// 	Check revised: ESD.5.WARN.2 / LAT.3P / LAT.3N / ESD.6 / RPO.C.3
//	Revise Layer: DMN2V   184
// 2.1d 02/12/01 Kevin Liu
//	Revise check: AM.W.1.Mx_AM.W.2.Mx
//		       MxHOB Logic operation
// 2.1e 04/12/01 C.W.Wei
//	Revise check: AM.W.3.Mx (x = 1~6)
//      Revised PP.E.3..4/PP.E.3..4 to avoid false errors caused by EXCL layer
//      Revised CO.S.2 rule checks
//	Revised check: AM.L.1.Mx (x = 1~6) 
// 2.1f 05/07/01 C.W.Wei
//	Revise check: AM.W.3.Mx (x = 1~6)
// 2.2a 05/28/01 Kevin Liu
//	1) Remove all layers V-Notches check.
//	2) Change layers NWELL/NP/PP/Metal2~Metal6/VIA2~VIA5 methodology to solve SRAM
//	   using NOT INSIDE EXCL
//	3) Rule change: NP.E.6/PP.E.6 added (RPO AND POLY) NOT IMP
//	4) FUSE rules are removed by this deck
//	5) Dummy Pad & Power Line remove Contact check
//	6) LAT.3N & LAT.3P methodology change
// 2.2b 08/14/2001 Kevin Liu
//	1) Adding layer FWI(235); LWI(63;2)
//	2) Revise derived layer RNGX = PMDMY NOT ( CB OR FW OR LW)
//	3) Revise metal density report file Mx_DENSITY.log (x=1~6)
//	4) " DRC MAXIMUM RESULTS ALL "
// 2.3a 10/05/2001 C.S.Yang 
//      Revise check : latch-up rule
// 2.3b 01/31/2002 Brad Pu
//	check revised:
//	1) NT_N.E.1: Using the definition of SIZE to check maximum and minimum.
//	2) ADP.W.3: width 80um is a good pattern.
//      3) Modify the resolution value of environment setup to 5
//      4) Remove LAYER RESOLUTION
//      5) Add two layers CBDi(169) and MDi(168), and related metal slot uncheck features.
//      6) ESD.6 check to EGTE not poly
// 2.3c 11/11/2002 - G.S.Chang
//	1) Revise Mx.S.2, employ OPPOSITE metrics to the spacing check of the small metal
//	   piece with length less than 1um and connected to wide metal.
//      2) Modify LAT.2 to check the whole active area inside SDI region 
//      3) Recognize each ESD devices for ESD rules with dummy layers instead of connections
//      4) Modify PP.E.3/PP.E.4/PP.C.2/PP.C.3/PP.E.1 (same as NP) to highlight the butted edge
//	   of OD and PP(NP) but without coincident with NP(PP).
//      5) Change the method to pickup bent poly in rule NTN.I.4
//	6) Create metal slot and chip-corner rules for RDL layers (MD). 
//	7) Create options of HIGH_VOLTAGE and CORE_VOLTAGE for slections of different core or I/O
//	   voltages and execute DRC with proper rules.
//	8) Add checks for warning if there is not any option for HIGH_VOLTAGE and CORE_VOLTAGE specified.
//	9) Apply new option INNER EMPTY in metal slot checks.
// 2.3d 03/11/2003 - G.S.Chang
//	1) Revise Mx.S.2, correct false errors between branches of wide metals.
//	2) Add 5V HIGH_VOLTAGE option for concatenation of 5V DRC module.
// 2.4a 07/01/2003 - Yating Chuang
//	1) Revise PO.R.2, fix false error from sizing step.
//	2) Relax butted edges between active and pickup for OD2.E.1.
//	3) Use NWELL to define active and pick-up od instead of PWELL.
//	4) Revise NWR.O.1, remove inside NWELL. Add check overlap of RPO to NP.
//      5) Add NWR.E.3, consider extension of NP beyond NPOD in NW resistor under STI.
//      6) Modified the definition of RDL pad area for metal slot exclusion.
//      7) Revise LAT.3P/N with more precisely sizing stepping.   
// 2.4b 12/16/2003 - Yating Chuang
//      1) Revise PO.R.2, fix missing error from definition of long poly.    
// 2.5a 03/04/2004 - C.T.Yao, Yating Chuang
//      1) Add option "#DEFINF CUP" for choosing wire bond structure.
//      2) Modify mslot and via rule to check circuit under CUP.
//      3) Revise connection layer in NW rule.     
//      4) Revise all metal slot dimension rules as guidelines and add AMS.DN.1.Mx. 
//      5) Refine ESD rules, add ESD.11, relax ESD.5B,ESD.5H,ESD.5I. 
//      6) Relax NT_N.W.1: 0.86um -> 0.74um.
//      7) Add ADP.R.0C, VIA1,3,5 and VIA2,4,6 should not overlap in dummy pad structure.  
//      8) Add ADP.R.0D, VIA1,3,5 and VIA2,4,6 should not overlap in power line structure. 
// 2.5b 07/05/2004 - C.T.Yao
//      1) Add option CHECK_SRAM_EXCL to check M2 and upward layers inside layer EXCL. 
//      2) Add HRI.WARN to check RLPPDMY interact OD.
//      3) Modify the checking methodology of the rule Mx.S.2 for checking exactly.
//      4) Replace OVERLAP, INSIDE ALSO, OUTSIDE ALSO options with AND, NOT, CUT operations.
//      5) Relax AM.W.1.Mx, at least one branch width >= 10um.
//      6) Revise ESD.5H, ESD.5I to be ">=" 0.25um, not "==" 0.25um.
//
//-------------------------------------------------------------------------------------------
//
// DUMMY LAYER REQUIRED:
//
//  1) HOTWL   - Hot N-Well
//               N-Well not connected to the most positive voltage Vdd is defined as Hot N-Well. 
//               It must follow different width and space rules from the N-Well connected to 
//               Vdd (Cold N-Well). Use "HOTWL" layer to exactly cover the Hot N-Well area for 
//               correct N-Well DRC.
//
//  2) EXCL    - unDRC area
//               If there's any area with different rules and not to be checked in this run, 
//               use the "EXCL" layer to exactly cover the area to be excluded.
//
//  3) SDI     - I/O ESD Protection Circuit
//               For I/O guidance rule checking, use "SDI" layer to designate the ESD area to 
//               checked. The whole ESD devices should be covered by "SDI".
//
//  4) DPDMY   - Dummy Pad area
//               For chip corner dummy pad, use "DPDUMMY" layer to cover dummy pad area.
//
//  5) PLDMY   - Power Line
//               For chip corner power line, use "PLDUMMY" layer to cover whole power line area.
//
//  6) RWDMY   - NWell Resistor
//               The N-Well region covered by both RWDMY and RPO is the NW within OD resistor.
//               The N-Well region covered by only RWDMY is the NW under STI resistor.
//
//  7) DRCDMY  - TSMC reserved layer
// 
//  8) ESD1DMY - IO ESD region dummy layer, RPO must enclose whole gate
//     ESD2DMY - RPO enclose gate 0.05 for 3.3V
//
//  9) DMN2V   - dummy layer to avoid N2V in N+ poly resistor
//     DMP2V   - dummy layer to avoid P2V in P+ poly resistor
//
// 10) ESEXCL  - dummy layer to cover SRAM cell. Used in N2V/P2V mask generation
//
// 11) RLPPDMY - LPP high resistance poly resistor
//               Use "RLPPDMY" to exactly cover LPP high resistance poly resistor area.
//
//-------------------------------------------------------------------------------------------
//
//                      CURRENT STATUS
//
//  RULES NOT IMPLEMENTED:
//
// The following rules are not coded in this rule file:
//
// rule                      description/explanation/alternate file
// ------------------------  ----------------------------------------------------
// Part I recommendations    Not coded (page 3 of spec.)
// 
// Antenna rules             Please refer to antenna DRC deck.
//
// Passivation rules         Please refer to Bound PAD DRC deck.
//
// Seal ring rules 	     not coded.
//
// Chip corner Power Line    Only ADP.1/ADP.S.1/ADP.C.1/ADP.C.2/ADP.E.1
// and Dummy PAD             /ADP.W.1/ADP.W.2/ADP.S.4/ADP.C.3/ADP.E.2 
//			     rules are coded.
//  
// * Guidelines implemented :
//
//     1) Partial I/O ESD GuideLine implemented: 1.4,5,6,9,11
//        Others don't be implemented because of guideline.
//
//     2) Partial LatchUp GuideLine implemented: 2,3
//        Others don't be implemented because of guideline.      
//
//     3) Dummy PAD Guidline implemented: ADP.S.2 ADP.W.3 ADP.W.4
//
//-------------------------------------------------------------------------------------------
//
// * To correctly use this DRC deck, the following settings are very important in
//    this DRC command file:
//	
//  (1) variable for High Voltage:
//
//	The default of this DRC command file assumes 3.3V and is used as high (I/O) voltage.
//	If other high voltages are used, please DEFINE other variables. For example,
//  	if 2.5V is used as high voltage, then the settings should be:
//		//#DEFINE 3.3V 	// when HIGH_VOLTAGE = 3.3V
//		#DEFINE 2.5V 	// when HIGH_VOLTAGE = 2.5V
//		//#DEFINE 5V 	// when HIGH_VOLTAGE = 5V
//	
//	If #DEFINE 5V is enabled, NT_N rule sections will be disabled.
//
//  (2) variable for Core Voltage:
//
//	The default of this DRC command file assumes 1.8V and is used as core voltage.
//	If lower core voltages are used, please DEFINE another variables. For example,
//  	if 1.5V is used as core voltage, then the settings should be change as:
//		//#DEFINE 1.8V 	// when CORE_VOLTAGE = 1.8V
//		#DEFINE 1.5V 	// when CORE_VOLTAGE = 1.5V
//
//  (3) variable for wire bond structure:
//      
//      If CUP(circuit under pad) structure is used, the setting should be:
//              #DEFINE CUP 
//      else, comment out it (default):
//              //#DEFINE CUP
//
//  (4) variable for check SRAM inside layer EXCL:
//
//      By default, we exclude DRC check inside SRAM region covered by exclude layer "EXCL(55)".
//      However, customers could enable this option to check M2 and upward layers inside EXCL
//      in order to check logic rules inside SRAM.
//      Please notice that turn on this option will also disable the waiving function of EXCL. 
//      And the region covered by EXCL will be examined with M2 and upward layers' rules.
//	Please un-comment the line below to enable this function:
// 		#DEFINE CHECK_SRAM_EXCL
//
////////////////////////////////////////////////////////////////////////////////////////////////

//#DEFINE CUP     // enable when CUP(circuit under pad) structure is used
//#DEFINE CHECK_SRAM_EXCL // enable when check M2 and upward layers in SRAM region covered by EXCL 

#DEFINE 3.3V 	// when HIGH_VOLTAGE = 3.3V
//#DEFINE 2.5V 	// when HIGH_VOLTAGE = 2.5V
//#DEFINE 5V 	// when HIGH_VOLTAGE = 5V

#DEFINE 1.8V 	// when CORE_VOLTAGE = 1.8V
//#DEFINE 1.5V 	// when CORE_VOLTAGE = 1.5V for Low-voltage process


//
// ENVIRONMENT SETUP
//------------------
PRECISION    1000
RESOLUTION     5   //Set layout grid  check to 0.005

LAYOUT SYSTEM GDSII
LAYOUT PATH "GDSFILENAME"
LAYOUT PRIMARY "TOPCELLNAME"

DRC RESULTS DATABASE "DRC_RES.db"
DRC SUMMARY REPORT "DRC.rep" 
DRC CHECK TEXT ALL
DRC MAXIMUM RESULTS ALL
//DRC INCREMENTAL CONNECT YES

FLAG OFFGRID YES     // For layout grid check. default grid value is resolution size
FLAG ACUTE YES
FLAG SKEW YES
FLAG NONSIMPLE YES




// DRAWN LAYER DEFINITIONS
//------------------------
LAYER  NWELi       2   // nwell technology
LAYER  DIFFi       3   // active areas
LAYER  PDIFFi      11  // active areas
LAYER  NDIFFi      12  // active areas
LAYER  OD2i        4   // define thick gate oxides
LAYER  POLYi       13  // polysilicon gates, interconnect
LAYER  PPi         7   // P+ S/D imlant
LAYER  NPi         8   // N+ S/D imlant
LAYER  COi         15  // Define connect for M1 to S/D and Gate
LAYER  M1i         16  // First Metal layer
LAYER  VIA1i       17  // Define connect for M2 to M1
LAYER  M2i         18  // Second Metal layer
LAYER  VIA2i       27  // Define connect for M3 to M2
LAYER  M3i         28  // Third Metal layer
LAYER  VIA3i       29  // Define connect for M4 to M3
LAYER  M4i         31  // Fourth Metal layer
LAYER  VIA4i       32  // Define connect for M5 to M4
LAYER  M5i         33  // Fifth Metal layer
LAYER  VIA5i       39  // Define connect for MTOP to 5
LAYER  M6i         38  // Sixth Metal layer  
LAYER  VIADi       167  // Define connect form top metal to MD
LAYER  MDi         168 // Definition of metal above MTop for redistribution interconnection
LAYER  CBi         19  // Passivation opening for Bond Pad
LAYER  CBDi        169 // Definition of passivation window for bump
LAYER  UBMi        170 // Bond pad definition for RDL
LAYER  RPOi        34  // Silicided Block Layer
LAYER  NTNi        129 // Native NMOS blocked implantation
LAYER  PLMIDEi     89  // Polymide (if drawn)
//LAYER  FUSEi       235 // Fuse window
LAYER  DNWi        82  // Deep N-WELL
LAYER  VTMPi       23  // blocking region of PMOS VT implantation
LAYER  VTMNi       24  // blocking region of NMOS VT implantation
LAYER  HRIi        48  // high resistor implant

//
// Metal Slot layers
//
LAYER MAP 16 DATATYPE 2 321
LAYER  M1SLOTi    321  // Metal1 slot (if drawn)
LAYER MAP 18 DATATYPE 2 322
LAYER  M2SLOTi    322  // Metal2 slot (if drawn)
LAYER MAP 28 DATATYPE 2 323
LAYER  M3SLOTi    323  // Metal3 slot (if drawn)
LAYER MAP 31 DATATYPE 2 324
LAYER  M4SLOTi    324  // Metal4 slot (if drawn)
LAYER MAP 33 DATATYPE 2 325
LAYER  M5SLOTi    325  // Metal5 slot (if drawn)
LAYER MAP 38 DATATYPE 2 326
LAYER  M6SLOTi  326    // Metal6 slot (if drawn)
LAYER MAP 168 DATATYPE 2 328
LAYER  MDSLOTi  328    // MD slot (if drawn)

//
// Dummy Metal layers
//
LAYER MAP 16 DATATYPE 1 316
LAYER  M1DMY    316
LAYER MAP 18 DATATYPE 1 318
LAYER  M2DMY    318
LAYER MAP 28 DATATYPE 1 329
LAYER  M3DMY    329
LAYER MAP 31 DATATYPE 1 331
LAYER  M4DMY    331
LAYER MAP 33 DATATYPE 1 333
LAYER  M5DMY    333
LAYER MAP 38 DATATYPE 1 338
LAYER  M6DMY    338
LAYER MAP 168 DATATYPE 1 340
LAYER  MDDMY    340    

//
// Capacitor Top Metal Layers
//
LAYER MAP 67 DATATYPE 2 257
LAYER CTM2i   257       // Capacitor Top Metal-2
LAYER MAP 67 DATATYPE 3 258
LAYER CTM3i   258       // Capacitor Top Metal-3
LAYER MAP 67 DATATYPE 4 259
LAYER CTM4i   259       // Capacitor Top Metal-4
LAYER MAP 67 DATATYPE 5 260
LAYER CTM5i   260       // Capacitor Top Metal-5
//
// Dummy Layers
//
LAYER  HOTWL       51  // Hot N-Well (SEE README HOT_NWEL NOTES)
LAYER  EXCL        55  // Exclude layer
LAYER  DRCDMY      60  // DRC I/O waiver
LAYER  RWDMY       52  // NWEL resistor dummy layer
LAYER  DPDMY       65  // dummy pad area dummy layer
LAYER  PLDMY       66  // power line area dummy layer
LAYER  SDI         58  // IO ESD region dummy layer
LAYER  ESD1DMY    136  // IO ESD region dummy layer, RPO must enclose whole gate
LAYER  ESD2DMY    137  // IO ESD region dummy layer, RPO enclose gate 0.05 for 3.3V
LAYER  ESD3DMY    234
LAYER  CTMDMY     131  // Cover metal as a capacitor bottom plate
LAYER  RLPPDMY    134  // HRI high Poly resistor dummy layer
LAYER  DMN2V      184  // dummy layer to avoid N2V in N+ poly resistor
LAYER  DMP2V      149  // dummy layer to avoid P2V in P+ poly resistor
LAYER  ESEXCL      76  // dummy layer to cover SRAM cell
LAYER  VARDMY     138  // dummy layer to cover varactor device
LAYER  PMDMY      236  // dummy layer to cover fuse window and protection ring structur
LAYER  FWI        235  // Fuse window when x, (x+1) = 3 
LAYER  LWI        363  // L target window for bump process
LAYER MAP 63 DATATYPE 2 363
LAYER  ESDi        30  // For 0.18um 1.8V/5V on i/o esd's implant only.
LAYER  INDDMY     364  // dummy layer to define inductor
LAYER MAP 139 DATATYPE 0 364

LAYOUT TOP LAYER M1i VIA1i M1SLOTi M1DMY
LAYOUT TOP LAYER M2i VIA2i M2SLOTi M2DMY
LAYOUT TOP LAYER M3i VIA3i M3SLOTi M3DMY
LAYOUT TOP LAYER M4i VIA4i M4SLOTi M4DMY
LAYOUT TOP LAYER M5i VIA5i M5SLOTi M5DMY
LAYOUT TOP LAYER MDi VIADi MDSLOTi MDDMY M6i M6SLOTi CBi 

ODi    = (DIFFi OR NDIFFi) OR PDIFFi
NRODi  = ODi NOT RPOi
NPODi  = NPi AND NRODi
PPODi  = PPi AND NRODi
NONWRi = NWELi NOT INTERACT RWDMY  // NWEL - NWR(OD) - NWR(STI)
//NTAPi  = NPODi AND NWELi
NTAPi  = NPODi AND NONWRi   // NWELL pick up
PTAPi  = PPODi NOT NWELi    // PWELL pick up
PACTi  = PPODi AND NONWRi   // PMOSi  
PSDi   = PACTi NOT POLYi    // PMOS source/drain,separated
NACTi  = NPODi NOT NWELi    // NMOSi
NSDi   = NACTi NOT POLYi    // NMOS source/drain,separated  
ILP1i  = POLYi NOT RPOi     // interconnection poly

M1xd   = (M1i OR M1DMY) NOT M1SLOTi
M2xd   = (M2i OR M2DMY) NOT M2SLOTi
M3xd   = (M3i OR M3DMY) NOT M3SLOTi
M4xd   = (M4i OR M4DMY) NOT M4SLOTi
M5xd   = (M5i OR M5DMY) NOT M5SLOTi
M6xd   = (M6i OR M6DMY) NOT M6SLOTi
MDxd   = (MDi OR MDDMY) NOT MDSLOTi


/////////////////////////////////////////////////////////////////////////////////
//
// GLOBAL DERIVED LAYERS FOR RULE CHECKS
//--------------------------------------
CHIP         = EXTENT
BULK         = SIZE CHIP BY 1.0

PWELi = BULK NOT NWELi

//
// EXCLUDE UNCHECKED REGIONS
//--------------------------

#IFDEF CHECK_SRAM_EXCL
EXCL_S  = CHIP NOT BULK  // an empty layer to disable the usage of EXCL
#ELSE
EXCL_S  = COPY EXCL      // EXCL_S = EXCL
#ENDIF

PWEL  = PWELi NOT EXCL
NWEL    = NWELi NOT INSIDE EXCL
OD      = ODi NOT EXCL
OD2     = OD2i   NOT EXCL
POLY    = POLYi  NOT EXCL
PP      = PPi    NOT INSIDE EXCL
NP      = NPi    NOT INSIDE EXCL
CO      = COi    NOT EXCL
M1      = M1xd    NOT EXCL
VIA1    = VIA1i   NOT EXCL
M2      = M2xd    NOT INSIDE EXCL_S
VIA2    = VIA2i   NOT INSIDE EXCL_S
M3      = M3xd    NOT INSIDE EXCL_S
VIA3    = VIA3i   NOT INSIDE EXCL_S
M4      = M4xd    NOT INSIDE EXCL_S
VIA4    = VIA4i   NOT INSIDE EXCL_S
M5      = M5xd    NOT INSIDE EXCL_S
VIA5    = VIA5i   NOT INSIDE EXCL_S
M6	= M6xd	  NOT INSIDE EXCL_S
VIAD    = VIADi   NOT INSIDE EXCL_S
MD	= MDxd	  NOT INSIDE EXCL_S
CB      = CBi    NOT EXCL_S
CBD     = CBDi   NOT EXCL_S
RPO     = RPOi   NOT EXCL
NTN     = NTNi   NOT EXCL
PLMIDE  = PLMIDEi NOT EXCL_S
//FUSE    = FUSEi  NOT EXCL
FW      = FWI    NOT EXCL_S
LW      = LWI    NOT EXCL_S
DNW     = DNWi   NOT EXCL
VTMP    = VTMPi NOT EXCL
VTMN    = VTMNi NOT EXCL
HRI     = HRIi  NOT EXCL

CTM2    = CTM2i NOT EXCL_S
CTM3    = CTM3i NOT EXCL_S
CTM4    = CTM4i NOT EXCL_S
CTM5    = CTM5i NOT EXCL_S
ESD     = ESDi NOT EXCL_S

NPOD         = NP AND OD              // N+ OD region
PPOD         = PP AND OD	      // P+ OD region

RNWEL    = NWEL INTERACT RWDMY    	// NWEL resistor (UNDER OD & STI)
NONWR	 = NWEL NOT RNWEL		// NWEL - NWR(OD) - NWR(STI)

NTAP         = NPOD AND NONWR         // NWEL tap diffusion
NACT         = NPOD NOT NWEL          // NMOS device active diffusion
PTAP         = PPOD NOT NWEL          // Substrate (pwell) tap diffusion
PACT         = PPOD AND NWEL
DACT 	     = NACT OR PACT
ALL_GATE     = POLY AND OD              // Gate regions for NMOS and PMOS
POLY_ISO     = POLY NOT OD              // Interconnect POLY
LVGT         = ALL_GATE NOT OD2         // 1.8V gate
HVGT         = ALL_GATE AND OD2		// 3.3V gate
GATE_W       = POLY INSIDE EDGE OD      // Gate width
GATE_L       = OD INSIDE EDGE POLY      // Channel length

FPO1         = COPY POLY_ISO            // field poly
PORES        = FPO1 AND RPO             // POLY resistor region
ILP1         = POLY_ISO NOT RPO             // interconnection poly
HRDMY        = (DMP2V OR DMN2V) OR RLPPDMY //high resistance poly resistor dummy layer for DRC
HREP         = PORES AND HRDMY          // high precision and resistacne poly resistor
HVN_GOX      = NPOD AND OD2               // Device n-type diffusion for thick gate NMOS
HVP_GOX      = PPOD AND OD2               // Device p-type diffusion for thick gate PMOS
HV_NGATE_W   = GATE_W INSIDE EDGE HVN_GOX // 3.3V NMOS gate edges
HV_PGATE_W   = GATE_W INSIDE EDGE HVP_GOX // 3.3V PMOS gate edges

BUTT_NTAP    = NTAP TOUCH PACT              // NWEL tap butting p-type active diffusion
NONB_NTAP    = NTAP NOT TOUCH PACT          // Non-butting ntap
BUTT_PTAP    = PTAP TOUCH NACT              // Pwell tap butting n-type active diffusion
NONB_PTAP    = PTAP NOT TOUCH NACT          // Non-butting ptap 
PP_BEDGE     = BUTT_PTAP COIN EDGE NACT     // PP edge to form butted tap
NP_BEDGE     = BUTT_NTAP COIN EDGE PACT     // NP edge to form butted tap

OD2_BEDGE    = OD2 INSIDE EDGE OD

ACT_OD  = OD INTERACT POLY
PNSD    = ACT_OD NOT ALL_GATE
SDPO2 = PNSD INTERACT POLY == 2             // S/D between two Poly gate

CO_DIFF    = CO OUTSIDE POLY_ISO        // Diffusion contacts + floating contacts
CO_POLY    = CO NOT OUTSIDE POLY_ISO    // POLY contacts

GATE_NP     = ALL_GATE AND NP
GATE_PP     = ALL_GATE AND PP

// For checks such as N2V.C.4:
EXGATE_NP          = SIZE ((SIZE GATE_NP BY 0.03) AND POLY) BY 0.32
EXGATE_PP          = SIZE ((SIZE GATE_PP BY 0.03) AND POLY) BY 0.32


IMP     = PP OR NP
ASD1    = PNSD ENCLOSE CO_DIFF

FUSE_LMARK = (CB OR FW) OR LW
RNGX       = PMDMY NOT FUSE_LMARK



#IFNDEF 3.3V
#IFNDEF 2.5V
#IFNDEF 5V
OPTION.HIGH_VOLTAGE { @ There must be specified an option of HIGH_VOLTAGE
  COPY CHIP
}
#ENDIF
#ENDIF
#ENDIF

#IFNDEF 1.8V
#IFNDEF 1.5V
OPTION.CORE_VOLTAGE { @ There must be specified an option of CORE_VOLTAGE
  COPY CHIP
}
#ENDIF
#ENDIF

HRI.WARN { @ RLPPDMY overlap OD is not allowed
  RLPPDMY AND OD   
}


//
// NWEL CHECKS
//=============
CONNECT    NTAPi NWELi
CONNECT    NTAPi PSDi
CONNECT    PTAPi NSDi
CONNECT    M1xd ILP1i NTAPi PTAPi PSDi NSDi BY COi
CONNECT    M1xd M2xd BY VIA1i
CONNECT    M2xd M3xd BY VIA2i
CONNECT    M3xd M4xd BY VIA3i
CONNECT    M4xd M5xd BY VIA4i
//Exclude the via upon CTM region
VIAt   = VIA5i NOT INTERACT CTM5i
VIAc   = VIA5i AND CTM5i
CONNECT    M5xd M6xd BY VIAt 
CONNECT    M6xd CTM5i BY VIAc
CONNECT    M6xd MDxd BY VIADi

HOT_NWEL = (NWEL AND HOTWL) OR RNWEL

NW.W.1 { @ Minimum NWEL width < 0.86
  INT NWEL < 0.86 ABUT < 90 SINGULAR REGION
}
NW.W.2 { @ Minimum HOT_NWEL width < 2.10
  INT HOT_NWEL < 2.10 ABUT < 90 SINGULAR REGION
}
NW.S.1 { @ Minimum different potential NWEL space < 1.40
  NWEL_NODAL = STAMP NWEL BY NWELi
  EXT NWEL_NODAL < 1.40 SINGULAR REGION ABUT < 90 NOT CONNECTED
  EXT RNWEL NWEL < 1.40 SINGULAR REGION ABUT < 90
  EXT RNWEL < 1.40 SINGULAR REGION ABUT < 90
}
NW.S.2 { @ Minimum same potential NWEL space < 0.6
  EXT NWEL < 0.60 REGION ABUT < 90 SINGULAR 
}


// NWEL (within OD) RESISTOR CHECKS
//====================================

NWRES = RNWEL INTERACT RPO      // NWEL resistor (UNDER OD)
ODWR  = OD INTERACT NWRES       // OD area of NW resistor
NPWR  = NP INTERACT NWRES       // N+ implant on NW resistor terminals
COWR  = CO_DIFF INTERACT NWRES  // Contact on NW resistor terminals
RHWR  = ODWR NOT RPO            // Non-Silicided area of NW resistor

NWR.E.1 {@ Min. OD enclose NWEL resistor < 1.0
  ENC NWRES ODWR < 1.0 ABUT<90 SINGULAR REGION
  NWRES CUT ODWR    
}
NWR.E.2 {@ Min. NWEL resistor enclose CO < 0.3
  ENC COWR NWRES < 0.3 ABUT<90 SINGULAR REGION
  COWR CUT NWRES    
}
NWR.C.1 {@ Min. RPO hole enclose NWEL < 0.3
  ENC NWRES RHWR < 0.3 ABUT<90 SINGULAR REGION
}
NWR.C.2 {@ Min. RPO enclose OD (with NWEL resistor) < 0.22
  ENC ODWR RPO < 0.22 ABUT<90 SINGULAR REGION
}
NWR.C.3 {@ Min. RPO hole enclose NWEL resistor CO < 0.3
  ENC COWR RHWR < 0.3 ABUT<90 SINGULAR REGION
  COWR CUT RHWR    
}
NWR.O.1 {@ Min. RPO overlap NP < 0.4
    INT NPWR RPO < 0.4 ABUT < 90 SINGULAR REGION
    X = RPO INTERACT NWRES
    H = HOLES X INNER
    H NOT NPWR
}
NWR.R.1 {@ NW resistor doped by implants not allowed.
  RWDMY AND NPOD
  RWDMY AND PPOD
}
//NWEL under STI
NWRES_STI = RNWEL NOT INTERACT RPO	// NWEL resistor (UNDER STI)
ODWR_STI  = OD INTERACT NWRES_STI
NPWR_STI  = NP INTERACT NWRES_STI
NWR.E.3 { @ Min. extension of NP to OD (NWEL resistor under STI) 0.18 um
  ENC ODWR_STI NPWR_STI < 0.18 ABUT < 90 SINGULAR REGION
  ODWR_STI NOT NPWR_STI
}



// OD CHECKS
//==============
OD.R.1.WARN { @ OD without implant
  (OD NOT ODWR) NOT IMP
}
OD.W.1_OD.W.2 { @ Min. OD width for MOS and interconnect < 0.22
  INT OD < 0.22 SINGULAR ABUT < 90 REGION 
}
OD.S.1 { @ Minimum OD spacing < 0.28
  EXT OD < 0.28 ABUT < 90 SINGULAR REGION 
}
OD.C.1 { @ NWEL olap NPOD tie down < 0.12
   ENC NPOD NONWR < 0.12 SINGULAR ABUT<90 REGION
   NPOD CUT NONWR    
}
OD.C.2_OD.C.3 { @ Minimum NWEL to NPOD space < 0.43
   A = NPOD NOT INSIDE NWEL
   X = A NOT ODWR
   EXT X NWEL < 0.43 SINGULAR ABUT<90 REGION
   X CUT NWEL
}
OD.C.4 { @ NWEL overlap PPOD < 0.43
   ENC PPOD NWEL < 0.43 SINGULAR ABUT<90 REGION
   PPOD CUT NWEL    
}
OD.C.5 { @ NWEL space PPOD outside NW < 0.12
   EXT PTAP NWEL < 0.12 SINGULAR ABUT<90 REGION
}
// OD.C.6 is taken care of by PP.C.4 and NP.C.4
// OD.S.2 is not necessary to check

OD.W.3 { @ Butting OD edge with one segment < 0.42 or tap area < 0.176 um*um
   A = LENGTH PP_BEDGE >= 0.42      // Gets edges segments that are OK
   B = EXPAND EDGE PP_BEDGE         // Create polygon from separate edges
       INSIDE BY 0.004              // by expanding toward tap and extending
       EXTEND BY 0.004              // endpoints by small database unit.
   B NOT WITH EDGE A                // All edges not including an OK edge
   C = LENGTH NP_BEDGE >= 0.42      
   D = EXPAND EDGE NP_BEDGE 
       INSIDE BY 0.004 
       EXTEND BY 0.004
   D NOT WITH EDGE C 
   AREA BUTT_NTAP < 0.176
   AREA BUTT_PTAP < 0.176
}
OD.A.1 { @ Minimum area of stand-alone OD region < 0.202
  OD AREA < 0.202
}







// OD2 CHECKS
//===============
OD2.E.1 { @ Minimum OD2 olap OD < 0.32
  // This only applies to active OD
  CHECK_EDGE_N = ENC [NACT] OD2 < 0.32 SINGULAR ABUT <90 
  CHECK_EDGE_N NOT COIN OUTSIDE EDGE PTAP
  CHECK_EDGE_P = ENC [PACT] OD2 < 0.32 SINGULAR ABUT <90 
  CHECK_EDGE_P NOT COIN OUTSIDE EDGE NTAP
  OD2 INSIDE DACT		// OD2 totally inside OD
  Y = DACT INTERACT OD2
  Z = Y NOT OD2
  Z OUTSIDE ALL_GATE
}
#IFNDEF 5V
#IFDEF 1.8V
OD2.S.1 { @ Minimum OD2 spacing < 0.45
  // Merge if space < 0.45 um
  EXT OD2 < 0.45 SINGULAR ABUT <90 REGION
}
#ENDIF
#ENDIF
#IFDEF 1.5V
OD2.S.1.LV { @ Minimum OD2 spacing < 0.86
  // Merge if space < 0.86 um
  EXT OD2 < 0.86 SINGULAR ABUT <90 REGION
}
#ENDIF
OD2.C.1 { @ Minimum OD2 space to OD < 0.32
  EXT OD2 NACT < 0.32 SINGULAR ABUT <90 REGION
  EXT OD2 PACT < 0.32 SINGULAR ABUT <90 REGION
}
OD2.C.2 { @ Minimum OD2 space to gate < 0.4
  A = OD2 INSIDE EDGE DACT
  EXT A GATE_W < 0.400 ABUT <90
}
OD2.E.2 { @ Minimum enclosure of gate by OD2 < 0.4
  ENC GATE_W OD2_BEDGE < 0.400 ABUT <90 
  HVGT TOUCH EDGE OD2
}
#IFDEF 1.5V
OD2.E.4.LV { @ OD2 enclose NWEL >= 0.86um/Align if less than 0.86um
  ENC NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.C.4.LV { @ OD2 to NWEL >= 0.86um/Align if less than 0.86um
  EXT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR REGION
  ENC OD2 NWEL < 0.86 ABUT>0<90 SINGULAR REGION
}
OD2.O.1.LV { @OD2 overlaps NWEL >= 0.86um
  INT NWEL OD2 < 0.86 ABUT>0<90 SINGULAR MEASURE COINCIDENT REGION
}
#ENDIF


// POLY checks
//=============

//PO.W.1A is checked by PO.W.3
//PO.W.2A is checked by PO.W.3

PO.W.3 { @ Min. POLY width for interconnect, 1.8V NMOS, 1.8V PMOS < 0.18
  INT POLY < 0.18 SINGULAR ABUT < 90 REGION
}
#IFDEF 3.3V
PO.W.1B { @ Minimum POLY gate length 3.3V pmos < 0.30
  INT HV_PGATE_W < 0.30 ABUT < 90 REGION
}
PO.W.2B { @ Minimum POLY gate length 3.3v nmos < 0.35
  INT HV_NGATE_W < 0.35 ABUT < 90 REGION
}
#ENDIF
#IFDEF 2.5V
PO.W.1B { @ Minimum POLY gate length 2.5V pmos < 0.26
  INT HV_PGATE_W < 0.26 ABUT < 90 REGION
}
PO.W.2B { @ Minimum POLY gate length 2.5v nmos < 0.26
  INT HV_NGATE_W < 0.26 ABUT < 90 REGION
}
#ENDIF
#IFDEF 5V
PO.W.1B { @ Minimum POLY gate length 5.0V pmos < 0.5
  INT HV_PGATE_W < 0.5 ABUT < 90 REGION
}
PO.W.2B { @ Minimum POLY gate length 5.0v nmos < 0.6
  INT HV_NGATE_W < 0.6 ABUT <90 REGION
}
#ENDIF

PO.S.1 { @ Minimum POLY space on OD with contact < 0.375
         // Select device OD enclosing contacts
         // Get gate edges (width) along s/d region
         // Find spacing violations between edges
  Y = ALL_GATE COINCIDENT OUTSIDE EDGE ASD1
  EXT Y < 0.375 REGION
}
PO.S.2_PO.S.3 { @ Min. POLY space: on OD w/o contact and interconnect < 0.25
    EXT POLY < 0.25 SINGULAR ABUT <90 REGION
}
PO.C.1 { @ Minimum POLY on field space to active < 0.1
  EXT POLY OD < 0.1 ABUT < 89.5 REGION SINGULAR
}
PO.C.2 { @ Minimum OD overhang gate < 0.32
  ENC POLY OD < 0.32 SINGULAR ABUT < 89.5 REGION
}
PO.O.1 { @ Minimum POLY overhang active < 0.22
  ENC OD POLY < 0.22 SINGULAR ABUT < 89.5 REGION
}
PO.R.1A { @ 90 degree gate not allowed/L and U shape gate are not allowed
      // 0.18 value is arbitrary, note the angle
  EXT GATE_W < 0.18 ABUT == 90 INTERSECTING ONLY
  INT GATE_W < 0.18 ABUT == 90 INTERSECTING ONLY
}

PO.R.1B { @ 45 degree 1.8V gate min. length < 0.21
  INT LVGT < 0.21 ANGLED == 2 OPPOSITE REGION
}

PO.R.2 { @ Maximum POLY length between contacts when PO width less than 0.24um > 50.00
  LONG_PO = AREA ILP1 > 0.18*50
  CHECK_PO = LONG_PO INTERACT CO
  CHECK_CO = CO INTERACT CHECK_PO
  CO_A = SIZE CHECK_CO BY 50 / 2 INSIDE OF CHECK_PO STEP 0.25 
  PO_A = CHECK_PO INTERACT CO_A == 1
  PO_B = CHECK_PO INTERACT CO_A > 1
  CO_B = CO_A INTERACT PO_A
  CO_C = SIZE CO_B BY 50 / 2 INSIDE OF PO_A STEP 0.25 
  BAD = (PO_A NOT CO_C) OR (PO_B NOT CO_A)
  BAD_EDGE = BAD COIN INSIDE EDGE POLY
  ERROR = INT BAD_EDGE <= 0.24 ABUT < 90 REGION
  CHECK_PO INTERACT ERROR
}


// PP CHECKS
//============

PPE4_NWELC = SIZE NWELi BY 0.43
PPE4_NWELS = SIZE PPE4_NWELC BY 0.18
PPE4_OD = PPE4_NWELS AND PTAP
PPE4_C1 = ENC PPE4_OD PP < 0.18 ABUT >0<90 OPPOSITE REGION
PPE4_C2 = ENC PPE4_OD PP < 0.18 ABUT >0<90 CORNER REGION
PPE4_C3 = ENC PPE4_OD PP < 0.18 ABUT >0<90 PROJ==0 REGION
PPE4_C4 = (SIZE PPE4_C2 BY 0.005) NOT PPE4_OD
PPE4_ALL = (PPE4_C1 OR PPE4_C3) OR PPE4_C4
PPE4_CHECKOD = PPE4_ALL COIN OUTSIDE EDGE PPE4_OD

NPC3_C1 = EXT PPE4_OD NP < 0.18 ABUT >0<90 OPPOSITE REGION
NPC3_C2 = EXT PPE4_OD NP < 0.18 ABUT >0<90 CORNER REGION
NPC3_C3 = EXT PPE4_OD NP < 0.18 ABUT >0<90 PROJ==0 REGION
NPC3_C4 = (SIZE NPC3_C2 BY 0.005) NOT PPE4_OD
NPC3_ALL = (NPC3_C1 OR NPC3_C3) OR NPC3_C4
NPC3_CHECKOD = NPC3_ALL COIN OUTSIDE EDGE PPE4_OD
 
NPE4_NWELC = SIZE NWELi BY -0.43
NPE4_NWELS = SIZE NPE4_NWELC BY -0.18
NPE4_OD = NTAP NOT NPE4_NWELS
NPE4_C1 = ENC NPE4_OD NP < 0.18 ABUT >0<90 OPPOSITE REGION
NPE4_C2 = ENC NPE4_OD NP < 0.18 ABUT >0<90 CORNER REGION
NPE4_C3 = ENC NPE4_OD NP < 0.18 ABUT >0<90 PROJ==0 REGION
NPE4_C4 = (SIZE NPE4_C2 BY 0.005) NOT NPE4_OD
NPE4_ALL = (NPE4_C1 OR NPE4_C3) OR NPE4_C4
NPE4_CHECKOD = NPE4_ALL COIN OUTSIDE EDGE NPE4_OD

PPC3_C1 = EXT NPE4_OD PP < 0.18 ABUT >0<90 OPPOSITE REGION
PPC3_C2 = EXT NPE4_OD PP < 0.18 ABUT >0<90 CORNER REGION
PPC3_C3 = EXT NPE4_OD PP < 0.18 ABUT >0<90 PROJ==0 REGION
PPC3_C4 = (SIZE PPC3_C2 BY 0.005) NOT NPE4_OD
PPC3_ALL = (PPC3_C1 OR PPC3_C3) OR PPC3_C4
PPC3_CHECKOD = PPC3_ALL COIN OUTSIDE EDGE NPE4_OD

PP.W.1 { @ PP width < 0.440
  INT PP < 0.440 SINGULAR ABUT < 90 REGION 
}
PP.S.1 { @ PP space < 0.440
  EXT PP < 0.440 ABUT < 90 SINGULAR REGION
}
PP.C.1 { @ PP space to n active in pwell < 0.260
         // N active in pwell can be butting or
         // non-butting. The non-butting n active is not
         // allowed to touch PP.
  EXT PP NACT < 0.260 ABUT >0<90 REGION
  X = EXT PP [NACT] < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  Y NOT INTERACT PPOD
}
PP.C.2 { @ PP space to non-butting NTAP < 0.1 with PWEL space >= 0.43
  EXT PP NTAP < 0.1 ABUT>0<90 REGION
}
PP.C.3 { @ PP space to non-butting NTAP < 0.18 with PWEL space < 0.43
  PPC3_CHECKOD OUTSIDE EDGE NPE4_NWELC
}
// PP.C.4 is checked by NP.C.5 and PP.R.1
PP.C.5 { @ PP extension over (P gate) + (field poly within 0.35um) < 0.32um
         // This rule must extend out of gate in the direction of PO by 0.35um
  EXGATE_PP NOT PP
}
PP.O.1 { @ PP extends into p active < 0.230
  INT OD PP < 0.230 SINGULAR REGION ABUT >0<90
}
PP.E.1 { @ PP olap OD < 0.180
  ENC PACT PP < 0.180 SINGULAR ABUT >0<90 REGION
  Y = ENC [PACT] PP < 0.001 ABUT == 0
  Z = EXPAND EDGE Y OUTSIDE BY 0.001
  Z NOT INTERACT NPOD
}
PP.E.1_NP.E.1 { @ Implant can not coincident OD edge except butted diffusion
  IMP COIN INSIDE EDGE OD
}  
PP.E.3 { @ Minimum enclosure of PTAP by PP < 0.02 with NWEL space >= 0.43
  ENC PTAP PP < 0.02 ABUT>0<90 SINGULAR REGION
  X = ENC [PTAP] PP < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  Y NOT INTERACT NPOD
}
PP.E.4 { @ Min. enc. of PTAP by PP < 0.18 with NWEL space < 0.43
  PPE4_CHECKOD INSIDE EDGE PPE4_NWELC
}

// PP.C.6 not necessary to check
// PP.E.5 not necessary to check
 
PP.A.1 { @ Minimum area of PP < 0.3844
  PP AREA < 0.3844
}
PP.E.6 { @ Min enc of POLY resistor by PP < 0.18
  ENC PORES PP < 0.18 ABUT <90 REGION
  (RPO AND POLY) NOT IMP
}
PP.R.1_NP.R.1 { @ PP and NP not allowed to overlap
  PP AND NP
}
// PP.R.2 @ PP not generated by reverse NP
 


// NP CHECKS
//============
 
NP.W.1 { @ NP width < 0.440
  INT NP < 0.440 SINGULAR ABUT < 90 REGION
}
NP.S.1 { @ NP space < 0.440
  EXT NP < 0.440 ABUT < 90 SINGULAR REGION
}
NP.C.1 { @ NP space to p active in NWEL < 0.260
         // P active in NWEL can be butting or
         // non-butting. The non-butting p active is not
         // allowed to touch NP.
  EXT NP PACT < 0.260 ABUT >0<90 REGION
  X = EXT NP [PACT] < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  Y NOT INTERACT NPOD
}
NP.C.2 { @ NP space to non-butting ptap < 0.1 with NWEL space >= 0.43
  EXT NP PTAP < 0.1 ABUT>0<90 REGION
}
NP.C.3 { @ NP space to non-butting ptap < 0.18 with NWEL space < 0.43
  NPC3_CHECKOD INSIDE EDGE PPE4_NWELC
}
// NP.C.4 is checked by PP.C.5 and NP.R.1
NP.C.5 { @ NP extension over (N gate) + (field poly within 0.35um) < 0.32um
         // This rule must extend out of gate in the direction of PO by 0.35um
  EXGATE_NP NOT NP
}
NP.O.1 { @ NP extends into n active < 0.230
  INT OD NP < 0.230 SINGULAR REGION ABUT >0<90
}
NP.E.1 { @ NP olap OD < 0.180
  X = NACT NOT ODWR
  ENC X NP < 0.180 SINGULAR ABUT >0<90 REGION
  Y = ENC [X] NP < 0.001 ABUT == 0
  Z  = EXPAND EDGE Y OUTSIDE BY 0.001
  Z NOT INTERACT PPOD
}
NP.E.3 { @ Minimum enclosure of NTAP by NP < 0.02 with PWEL space >= 0.43
  ENC NTAP NP < 0.02 ABUT>0<90 SINGULAR REGION
  X = ENC [NTAP] NP < 0.001 ABUT == 0
  Y = EXPAND EDGE X OUTSIDE BY 0.001
  Y NOT INTERACT PPOD
}
NP.E.4 { @ Min. enc. of NTAP by NP < 0.18 with PWEL space < 0.43
  NPE4_CHECKOD OUTSIDE EDGE NPE4_NWELC
}

// NP.C.6 Not necessary to check
// NP.E.5 Not necessary to check

NP.A.1 { @ Minimum area of NP < 0.3844
  NP AREA < 0.3844
}
NP.E.6 { @ Min enc of POLY resistor by NP < 0.18
  ENC PORES NP < 0.18 ABUT <90 REGION
}
// NP.R.2 @ NP not generated by reverse PP



// RPO checks
//===========

RPO.W.1 { @ Minimum RPO width < 0.430
  INT RPO < 0.43 SINGULAR ABUT < 90 REGION
}
RPO.S.1 { @ Minimum RPO space < 0.43
  EXT RPO < 0.43 ABUT < 90 SINGULAR REGION
}
RPO.C.1 { @ Minimum RPO space to OD < 0.22
  EXT RPO OD < 0.22 SINGULAR ABUT < 90 REGION
}
RPO.C.2 { @ Minimum RPO space to CO < 0.22
  EXT RPO CO < 0.22 ABUT < 90 SINGULAR REGION 
  CO AND RPO     
}
RPO.C.3 { @ Minimum RPO space to gate < 0.45
  A = (((ALL_GATE NOT DRCDMY) NOT ESD1DMY) NOT ESD2DMY) NOT ESD3DMY   
  EXT RPO A < 0.45 ABUT < 90 SINGULAR REGION 
  RPO AND A
}
RPO.C.4 { @ Minimum RPO overhang OD < 0.22
  ENC OD RPO < 0.22 ABUT < 90 SINGULAR REGION
}
RPO.E.1 { @ Minimum OD overhang RPO < 0.22
  ENC RPO OD < 0.22 ABUT < 90 SINGULAR REGION
}
RPO.C.5 { @ Minimum RPO overhang POLY < 0.22
  ENC POLY RPO < 0.22 ABUT < 90 SINGULAR REGION
}
RPO.C.6 { @ Minimum clearance RPO to unrelated poly < 0.3um
  EXT RPO POLY_ISO < 0.30 ABUT < 90 SINGULAR REGION
}
RPO.A.1 { @ RPO min. area < 2 um*um
  AREA RPO < 2
}



// CO checks
//===============
CO.W.1 { @ contact width != 0.22
  NOT RECTANGLE CO == 0.22 BY == 0.22 ORTHOGONAL ONLY
}
CO.S.1 { @ contact spacing < 0.25
  EXT CO < 0.25 ABUT < 90 SINGULAR REGION
}
CO.S.2  { @ Min space between two contacts in larger than 3x3 array.
  A = SIZE CO BY 0.30/2 OVERUNDER  // space < 0.3um treat as array
  B = SIZE A BY 0.7 UNDEROVER                        // (0.22*3+0.3*2) = 1.26  (3 COs Mix.)
  C = B INTERACT CO >= 16                  // 1.63-0.22 = 1.41       (Max. CO shift space) 
  D = CO INTERACT C                        // so 1.26 < CONTY width < 1.41
  EXT D < 0.28                             // & we use CONTY width = 1.4
}

CO.C.1_CO.R.1 { @ diff contact to gate space < 0.16, or contact on gate
  EXT CO_DIFF ALL_GATE < 0.16 SINGULAR ABUT <90 REGION
  CO_DIFF AND ALL_GATE    
}
CO.C.2 { @ poly contact space to OD < 0.20
  EXT CO_POLY OD < 0.20 ABUT <90 SINGULAR REGION
}
CO.E.1 { @ active olap contact < 0.10, also floating contacts
  ENC CO_DIFF OD < 0.10 SINGULAR ABUT < 90 REGION
  CO_DIFF OUTSIDE EDGE OD    
}
CO.E.2 { @ poly olap contact < 0.10
  ENC CO_POLY POLY_ISO < 0.10 SINGULAR ABUT < 90 REGION
  CO_POLY CUT POLY_ISO    
}
CO.E.3 { @ implant olap contact < 0.12
  ENC CO_DIFF PP < 0.12 ABUT < 90 SINGULAR REGION 
  PP INSIDE EDGE CO_DIFF    
}
CO.E.4 { @ implant olap contact < 0.12
  ENC CO_DIFF NP < 0.12 ABUT < 90 SINGULAR REGION 
  NP INSIDE EDGE CO_DIFF    
}
// CO.R.2 is checked by CO.E.3/CO.E.4
// CO.R.3 is checked by RPO.C.2


// M1 checks
//=============

M1.W.1 { @ M1 width < 0.23
  INT M1 < 0.23 SINGULAR REGION ABUT < 90
}
M1.S.1 { @ M1 spacing < 0.23
  EXT M1 < 0.23 ABUT < 90 SINGULAR REGION
}
M1.S.2 { @ Wide M1 (>10um) min. to M1 < 0.6 um
  M1_S5 = SHRINK (SHRINK (SHRINK (SHRINK M1 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_G5 = GROW (GROW (GROW (GROW M1_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M1_Wide = M1_G5 AND M1
  M1_Exp = SIZE M1_Wide BY 1 INSIDE OF M1 STEP 0.161
  M1_Branch = M1_Exp NOT M1_Wide
  M1_Branch_edge = M1_Branch COIN INSIDE EDGE M1
  M1_Check = M1 AND (SIZE M1_Exp BY 0.6)
  M1_Else = M1_Check NOT INTERACT M1_Exp
  M1_Extend = M1_Check NOT M1_Exp 
  M1_WideC = STAMP M1_Wide BY M1xd
  M1_ElseC = STAMP M1_Check BY M1xd
  EXT M1_WideC M1_ElseC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M1_Branch_edge M1_Else < 0.6 ABUT >0 <89.5 OPPOSITE REGION
  EXT M1_Branch_edge M1_Else < 0.6 ABUT >0 <89.5 CORNER REGION
  EXT M1_Branch_edge M1_Else < 0.6 ABUT >0 <89.5 PROJ==0 REGION
  A = EXT M1_Exp < 0.6 ABUT > 0 < 89.5 SPACE REGION
  A NOT INTERACT M1_Extend
}
M1.E.1 { @ Min extension of a M1 region beyond a CO region is 0.005 um
  ENC CO M1 < 0.005 ABUT<90 SINGULAR
  CO NOT M1    
}
M1.E.2 { @ Min extension of M1 end-of-line region beyond CO region is 0.06 um
  X = ENC [CO] M1 < 0.06 ABUT < 90 OPPOSITE   // a narrow side
  INT X < 0.22 ABUT == 90 INTERSECTING ONLY          // adjacent narrow sides
}

M1.A.1{ @ Min M1 area < 0.202
  AREA M1 < 0.202
}

// Density check M1.R.1 included at the end of this file




    
// VIA1 checks
//=============

VIA1.W.1 { @ VIA1 must be 0.26 x 0.26 um
  A = NOT RECTANGLE VIA1 == 0.26 BY == 0.26 ORTHOGONAL ONLY
  A OUTSIDE RNGX   // exclude from metal fuse protection ring area
}

VIA1.S.1 { @ VIA1 SPACING < 0.26
  EXT VIA1 < 0.26 ABUT < 90 SINGULAR REGION 
}

VIA1.E.1 { @ Min extension of a M1 region beyond a VIA1 region is 0.01 um
  ENC VIA1 M1 < 0.01 ABUT<90 SINGULAR 
  VIA1 NOT M1    
}
 
VIA1.E.2 { @ Min extension of M1 end-of-line region beyond VIA1 region is 0.06 um
   X = ENC [VIA1] M1 < 0.06 ABUT < 90 OPPOSITE         // a narrow side
   INT X < 0.26  ABUT == 90 INTERSECTING ONLY     // adjacent narrow sides
}

// VIA1.C.1 does not require a DRC check


// M2 checks
//=============

M2.W.1 { @ M2 width < 0.28
  INT M2 < 0.28 SINGULAR REGION ABUT < 90
}

M2.S.1 { @ M2 spacing < 0.28
  EXT M2 < 0.28 ABUT < 90 SINGULAR REGION
}
M2.S.2 { @ Wide M2 (>10um) min. to M2 < 0.6 um
  M2_S5 = SHRINK (SHRINK (SHRINK (SHRINK M2 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_G5 = GROW (GROW (GROW (GROW M2_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M2_Wide = M2_G5 AND M2
  M2_Exp = SIZE M2_Wide BY 1 INSIDE OF M2 STEP 0.196
  M2_Branch = M2_Exp NOT M2_Wide
  M2_Branch_edge = M2_Branch COIN INSIDE EDGE M2
  M2_Check = M2 AND (SIZE M2_Exp BY 0.6)
  M2_Else = M2_Check NOT INTERACT M2_Exp
  M2_Extend = M2_Check NOT M2_Exp 
  M2_WideC = STAMP M2_Wide BY M2xd
  M2_ElseC = STAMP M2_Check BY M2xd
  EXT M2_WideC M2_ElseC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M2_Branch_edge M2_Else < 0.6 ABUT >0 <89.5 OPPOSITE REGION
  EXT M2_Branch_edge M2_Else < 0.6 ABUT >0 <89.5 CORNER REGION
  EXT M2_Branch_edge M2_Else < 0.6 ABUT >0 <89.5 PROJ==0 REGION
  A = EXT M2_Exp < 0.6 ABUT > 0 < 89.5 SPACE REGION
  A NOT INTERACT M2_Extend
}
M2.E.1 { @ Min extension of a M2 region beyond a VIA1 region is 0.01 um
   ENC VIA1 M2 < 0.01 ABUT<90 SINGULAR 
   VIA1 NOT M2    
}
 
M2.E.2 { @ Min extension of M2 end-of-line region beyond VIA1 region is 0.06um
   X = ENC [VIA1] M2 < 0.06 ABUT < 90 OPPOSITE		// a narrow side
   INT X < 0.26 ABUT == 90 INTERSECTING ONLY       // adjacent narrow sides
}

M2.A.1{ @ Min M2 area region < 0.202
  AREA M2 < 0.202
}
// Density check M2.R.1 included at the end of this file



    
// VIA2 checks
//=============

VIA2.W.1 { @ VIA2 must be 0.26 x 0.26 um
  A = NOT RECTANGLE VIA2 == 0.26 BY == 0.26 ORTHOGONAL ONLY
  A OUTSIDE RNGX   // exclude from metal fuse protection ring area
}

VIA2.S.1 { @ VIA2 SPACING < 0.26
  EXT VIA2 < 0.26 ABUT < 90 SINGULAR REGION 
}

VIA2.E.1 { @ Min extension of a M2 region beyond a VIA2 region is 0.01 um
  ENC VIA2 M2 < 0.01 ABUT<90 SINGULAR 
  VIA2 NOT M2    
}
 
VIA2.E.2 { @ Min extension of M2 end-of-line region beyond VIA2 region is 0.06 um
   X = ENC [VIA2] M2 < 0.06 ABUT < 90 OPPOSITE         // a narrow side
   INT X < 0.26  ABUT == 90 INTERSECTING ONLY     // adjacent narrow sides
}

// VIA2.C.1 does not require a DRC check


// M3 checks
//=============

M3.W.1 { @ M3 width < 0.28
  INT M3 < 0.28 SINGULAR REGION ABUT < 90
}

M3.S.1 { @ M3 spacing < 0.28
  EXT M3 < 0.28 ABUT < 90 SINGULAR REGION
}
M3.S.2 { @ Wide M3 (>10um) min. to M3 < 0.6 um
  M3_S5 = SHRINK (SHRINK (SHRINK (SHRINK M3 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_G5 = GROW (GROW (GROW (GROW M3_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M3_Wide = M3_G5 AND M3
  M3_Exp = SIZE M3_Wide BY 1 INSIDE OF M3 STEP 0.196
  M3_Branch = M3_Exp NOT M3_Wide
  M3_Branch_edge = M3_Branch COIN INSIDE EDGE M3
  M3_Check = M3 AND (SIZE M3_Exp BY 0.6)
  M3_Else = M3_Check NOT INTERACT M3_Exp
  M3_Extend = M3_Check NOT M3_Exp 
  M3_WideC = STAMP M3_Wide BY M3xd
  M3_ElseC = STAMP M3_Check BY M3xd
  EXT M3_WideC M3_ElseC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M3_Branch_edge M3_Else < 0.6 ABUT >0 <89.5 OPPOSITE REGION
  EXT M3_Branch_edge M3_Else < 0.6 ABUT >0 <89.5 CORNER REGION
  EXT M3_Branch_edge M3_Else < 0.6 ABUT >0 <89.5 PROJ==0 REGION
  A = EXT M3_Exp < 0.6 ABUT > 0 < 89.5 SPACE REGION
  A NOT INTERACT M3_Extend
}
M3.E.1 { @ Min extension of a M3 region beyond a VIA2 region is 0.01 um
   ENC VIA2 M3 < 0.01 ABUT<90 SINGULAR 
   VIA2 NOT M3    
}
 
M3.E.2 { @ Min extension of M3 end-of-line region beyond VIA2 region is 0.06um
   X = ENC [VIA2] M3 < 0.06 ABUT < 90 OPPOSITE		// a narrow side
   INT X < 0.26 ABUT == 90 INTERSECTING ONLY       // adjacent narrow sides
}

M3.A.1{ @ Min M3 area region < 0.202
  AREA M3 < 0.202
}
// Density check M3.R.1 included at the end of this file



    
// VIA3 checks
//=============

VIA3.W.1 { @ VIA3 must be 0.26 x 0.26 um
  A = NOT RECTANGLE VIA3 == 0.26 BY == 0.26 ORTHOGONAL ONLY
  A OUTSIDE RNGX   // exclude from metal fuse protection ring area
}

VIA3.S.1 { @ VIA3 SPACING < 0.26
  EXT VIA3 < 0.26 ABUT < 90 SINGULAR REGION 
}

VIA3.E.1 { @ Min extension of a M3 region beyond a VIA3 region is 0.01 um
  ENC VIA3 M3 < 0.01 ABUT<90 SINGULAR 
  VIA3 NOT M3    
}
 
VIA3.E.2 { @ Min extension of M3 end-of-line region beyond VIA3 region is 0.06 um
   X = ENC [VIA3] M3 < 0.06 ABUT < 90 OPPOSITE         // a narrow side
   INT X < 0.26  ABUT == 90 INTERSECTING ONLY     // adjacent narrow sides
}

// VIA3.C.1 does not require a DRC check


// M4 checks
//=============

M4.W.1 { @ M4 width < 0.28
  INT M4 < 0.28 SINGULAR REGION ABUT < 90
}

M4.S.1 { @ M4 spacing < 0.28
  EXT M4 < 0.28 ABUT < 90 SINGULAR REGION
}
M4.S.2 { @ Wide M4 (>10um) min. to M4 < 0.6 um
  M4_S5 = SHRINK (SHRINK (SHRINK (SHRINK M4 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_G5 = GROW (GROW (GROW (GROW M4_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M4_Wide = M4_G5 AND M4
  M4_Exp = SIZE M4_Wide BY 1 INSIDE OF M4 STEP 0.196
  M4_Branch = M4_Exp NOT M4_Wide
  M4_Branch_edge = M4_Branch COIN INSIDE EDGE M4
  M4_Check = M4 AND (SIZE M4_Exp BY 0.6)
  M4_Else = M4_Check NOT INTERACT M4_Exp
  M4_Extend = M4_Check NOT M4_Exp 
  M4_WideC = STAMP M4_Wide BY M4xd
  M4_ElseC = STAMP M4_Check BY M4xd
  EXT M4_WideC M4_ElseC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M4_Branch_edge M4_Else < 0.6 ABUT >0 <89.5 OPPOSITE REGION
  EXT M4_Branch_edge M4_Else < 0.6 ABUT >0 <89.5 CORNER REGION
  EXT M4_Branch_edge M4_Else < 0.6 ABUT >0 <89.5 PROJ==0 REGION
  A = EXT M4_Exp < 0.6 ABUT > 0 < 89.5 SPACE REGION
  A NOT INTERACT M4_Extend
}
M4.E.1 { @ Min extension of a M4 region beyond a VIA3 region is 0.01 um
   ENC VIA3 M4 < 0.01 ABUT<90 SINGULAR 
   VIA3 NOT M4    
}
 
M4.E.2 { @ Min extension of M4 end-of-line region beyond VIA3 region is 0.06um
   X = ENC [VIA3] M4 < 0.06 ABUT < 90 OPPOSITE		// a narrow side
   INT X < 0.26 ABUT == 90 INTERSECTING ONLY       // adjacent narrow sides
}

M4.A.1{ @ Min M4 area region < 0.202
  AREA M4 < 0.202
}
// Density check M4.R.1 included at the end of this file



    
// VIA4 checks
//=============

VIA4.W.1 { @ VIA4 must be 0.26 x 0.26 um
  A = NOT RECTANGLE VIA4 == 0.26 BY == 0.26 ORTHOGONAL ONLY
  A OUTSIDE RNGX   // exclude from metal fuse protection ring area
}

VIA4.S.1 { @ VIA4 SPACING < 0.26
  EXT VIA4 < 0.26 ABUT < 90 SINGULAR REGION 
}

VIA4.E.1 { @ Min extension of a M4 region beyond a VIA4 region is 0.01 um
  ENC VIA4 M4 < 0.01 ABUT<90 SINGULAR 
  VIA4 NOT M4    
}
 
VIA4.E.2 { @ Min extension of M4 end-of-line region beyond VIA4 region is 0.06 um
   X = ENC [VIA4] M4 < 0.06 ABUT < 90 OPPOSITE         // a narrow side
   INT X < 0.26  ABUT == 90 INTERSECTING ONLY     // adjacent narrow sides
}

// VIA4.C.1 does not require a DRC check


// M5 checks
//=============

M5.W.1 { @ M5 width < 0.28
  INT M5 < 0.28 SINGULAR REGION ABUT < 90
}

M5.S.1 { @ M5 spacing < 0.28
  EXT M5 < 0.28 ABUT < 90 SINGULAR REGION
}
M5.S.2 { @ Wide M5 (>10um) min. to M5 < 0.6 um
  M5_S5 = SHRINK (SHRINK (SHRINK (SHRINK M5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_G5 = GROW (GROW (GROW (GROW M5_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M5_Wide = M5_G5 AND M5
  M5_Exp = SIZE M5_Wide BY 1 INSIDE OF M5 STEP 0.196
  M5_Branch = M5_Exp NOT M5_Wide
  M5_Branch_edge = M5_Branch COIN INSIDE EDGE M5
  M5_Check = M5 AND (SIZE M5_Exp BY 0.6)
  M5_Else = M5_Check NOT INTERACT M5_Exp
  M5_Extend = M5_Check NOT M5_Exp 
  M5_WideC = STAMP M5_Wide BY M5xd
  M5_ElseC = STAMP M5_Check BY M5xd
  EXT M5_WideC M5_ElseC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M5_Branch_edge M5_Else < 0.6 ABUT >0 <89.5 OPPOSITE REGION
  EXT M5_Branch_edge M5_Else < 0.6 ABUT >0 <89.5 CORNER REGION
  EXT M5_Branch_edge M5_Else < 0.6 ABUT >0 <89.5 PROJ==0 REGION
  A = EXT M5_Exp < 0.6 ABUT > 0 < 89.5 SPACE REGION
  A NOT INTERACT M5_Extend
}
M5.E.1 { @ Min extension of a M5 region beyond a VIA4 region is 0.01 um
   ENC VIA4 M5 < 0.01 ABUT<90 SINGULAR 
   VIA4 NOT M5    
}
 
M5.E.2 { @ Min extension of M5 end-of-line region beyond VIA4 region is 0.06um
   X = ENC [VIA4] M5 < 0.06 ABUT < 90 OPPOSITE		// a narrow side
   INT X < 0.26 ABUT == 90 INTERSECTING ONLY       // adjacent narrow sides
}

M5.A.1{ @ Min M5 area region < 0.202
  AREA M5 < 0.202
}
// Density check M5.R.1 included at the end of this file





// VIA5 checks
//=============
#IFDEF CUP
VIA5R = VIA5 OUTSIDE CB 
#ELSE
VIA5R = COPY VIA5
#ENDIF

VIA5.W.1 { @ VIA5 must be 0.36 x 0.36 um
  A = NOT RECTANGLE VIA5R == 0.36 BY == 0.36 ORTHOGONAL ONLY
  A OUTSIDE RNGX     // exclude from metal fuse protection ring area
}

VIA5.S.1 { @ VIA5 spacing < 0.35
  EXT VIA5R < 0.35 ABUT < 90 SINGULAR REGION
}
 
VIA5.E.1 { @ Min extension of a M5 region beyond a VIA5 region is 0.01 um
  ENC VIA5R M5 < 0.01 ABUT<90 SINGULAR 
  VIA5R NOT M5    
}
VIA5.E.2 { @ Min extension of a M5 end-of-line region beyond VIA5 region is 0.06 um
  X = ENC [VIA5R] M5 < 0.06 OPPOSITE 			// a narrow side
  INT X < 0.36 ABUT == 90 INTERSECTING ONLY	// adjacent narrow sides
}
 
// VIA5.C.1 does not require check



// M6 checks
//=============
M6.W.1 { @ M6 width < 0.44
  INT M6 < 0.44 SINGULAR REGION ABUT < 90
}
M6.S.1 { @ M6 spacing < 0.46
  EXT M6 < 0.46 ABUT < 90 SINGULAR REGION
}
M6.S.2 { @ Wide M6 (>10um) min. to M6 < 0.6 um
  M6_S5 = SHRINK (SHRINK (SHRINK (SHRINK M6 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M6_G5 = GROW (GROW (GROW (GROW M6_S5 RIGHT BY 5) LEFT BY 5) TOP BY 5) BOTTOM BY 5
  M6_Wide = M6_G5 AND M6
  M6_Exp = SIZE M6_Wide BY 1 INSIDE OF M6 STEP 0.322
  M6_Branch = M6_Exp NOT M6_Wide
  M6_Branch_edge = M6_Branch COIN INSIDE EDGE M6
  M6_Check = M6 AND (SIZE M6_Exp BY 0.6)
  M6_Else = M6_Check NOT INTERACT M6_Exp
  M6_Extend = M6_Check NOT M6_Exp 
  M6_WideC = STAMP M6_Wide BY M6xd
  M6_ElseC = STAMP M6_Check BY M6xd
  EXT M6_WideC M6_ElseC < 0.6 ABUT >0 <89.5 NOT CONNECTED REGION
  EXT M6_Branch_edge M6_Else < 0.6 ABUT >0 <89.5 OPPOSITE REGION
  EXT M6_Branch_edge M6_Else < 0.6 ABUT >0 <89.5 CORNER REGION
  EXT M6_Branch_edge M6_Else < 0.6 ABUT >0 <89.5 PROJ==0 REGION
  A = EXT M6_Exp < 0.6 ABUT > 0 < 89.5 SPACE REGION
  A NOT INTERACT M6_Extend
} 
M6.E.1 { @ Min extension of a M6 region beyond a V5 region is 0.09 um
   ENC VIA5 M6 < 0.09 ABUT<90 SINGULAR 
   VIA5 NOT M6    
}
M6.A.1 { @ Min M6 area region < 0.562
  AREA M6 < 0.562
}
DISCONNECT


// METAL RATIO CHECKS
//======================

PO.R.3 {@ Min poly area coverage < 14%
  DENSITY POLYi < 0.14 PRINT POLY_DENSITY.log
}

M1.R.1 { @ Min M1 area coverage < 30%
  DENSITY M1xd < 0.3 PRINT M1_DENSITY.log
}  
M2.R.1 { @ Min M2 area coverage < 30%
  DENSITY M2xd < 0.3 PRINT M2_DENSITY.log
}  
M3.R.1 { @ Min M3 area coverage < 30%
  DENSITY M3xd < 0.3 PRINT M3_DENSITY.log
}  
M4.R.1 { @ Min M4 area coverage < 30%
  DENSITY M4xd < 0.3 PRINT M4_DENSITY.log
}  
M5.R.1 { @ Min M5 area coverage < 30%
  DENSITY M5xd < 0.3 PRINT M5_DENSITY.log
}  
M6.R.1 { @ Min M6 area coverage < 30%
  DENSITY M6xd < 0.3 PRINT M6_DENSITY.log
}  



// Dummy Pad
//==========

GROUP DUMMY_PAD_CHECK ADP.S.2 ADP.W.3 ADP.W.4

DP_V1 = DPDMY AND VIA1
DP_V2 = DPDMY AND VIA2
DP_V3 = DPDMY AND VIA3
DP_V4 = DPDMY AND VIA4
DP_V5 = DPDMY AND VIA5
DP_VD = DPDMY AND VIAD

ADP.R.0A { @ chip corner dummy pad structure should be M1/M2.../M6
  DPDMY NOT M1
  DPDMY NOT M2
  DPDMY NOT M3
  DPDMY NOT M4
  DPDMY NOT M5
  DPDMY NOT M6
}  

ADP.R.0B { @ chip corner dummy pad structure should be VIA1/VIA2.../VIA6
  DPDMY NOT ENCLOSE VIA1
  DPDMY NOT ENCLOSE VIA2
  DPDMY NOT ENCLOSE VIA3
  DPDMY NOT ENCLOSE VIA4
  DPDMY NOT ENCLOSE VIA5
}

ADP.R.0C { @ Via structure in Dummy Pad
  GRP1 = (DP_V2 OR DP_V4) OR DP_VD
  GRP2 = (DP_V1 OR DP_V3) OR DP_V5
  GRP1 AND GRP2
}
ADP.S.1_VIA1 { @ Via1 spacing (the same level) < 0.58um.
  EXT DP_V1 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIA2 { @ Via2 spacing (the same level) < 0.58um.
  EXT DP_V2 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIA3 { @ Via3 spacing (the same level) < 0.58um.
  EXT DP_V3 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIA4 { @ Via4 spacing (the same level) < 0.58um.
  EXT DP_V4 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIA5 { @ Via5 spacing (the same level) < 0.58um.
  EXT DP_V5 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.1_VIAD { @ ViaD spacing (the same level) < 0.58um.
  EXT DP_VD < 0.58 ABUT<90 SINGULAR REGION
}

ADP.C.1_V1_V2 { @ Vias spacing (different level) < 0.23um.
  EXT DP_V1 DP_V2 < 0.23 ABUT<90 SINGULAR
}
ADP.C.1_V2_V3 { @ Vias spacing (different level) < 0.23um.
  EXT DP_V2 DP_V3 < 0.23 ABUT<90 SINGULAR
}
ADP.C.1_V3_V4 { @ Vias spacing (different level) < 0.23um.
  EXT DP_V3 DP_V4 < 0.23 ABUT<90 SINGULAR
}

ADP.C.2_V4_V5 { @ Via4 and Via5 spacing < 0.16um.
  EXT DP_V4 DP_V5 < 0.16 ABUT<90 SINGULAR
}
ADP.C.2_V5_VD { @ Via5 and ViaD spacing < 0.16um.
  EXT DP_V5 DP_VD < 0.16 ABUT<90 SINGULAR
}

ADP.E.1_V1_M1 { @ Metal1 enclose Via1 in dummy pad < 3um.
  ENC DP_V1 M1 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V1_M2 { @ Metal2 enclose Via1 in dummy pad < 3um.
  ENC DP_V1 M2 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V2_M2 { @ Metal2 enclose Via2 in dummy pad < 3um.
  ENC DP_V2 M2 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V2_M3 { @ Metal3 enclose Via2 in dummy pad < 3um.
  ENC DP_V2 M3 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V3_M3 { @ Metal3 enclose Via3 in dummy pad < 3um.
  ENC DP_V3 M3 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V3_M4 { @ Metal4 enclose Via3 in dummy pad < 3um.
  ENC DP_V3 M4 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V4_M4 { @ Metal4 enclose Via4 in dummy pad < 3um.
  ENC DP_V4 M4 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V4_M5 { @ Metal5 enclose Via4 in dummy pad < 3um.
  ENC DP_V4 M5 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V5_M5 { @ Metal5 enclose Via5 in dummy pad < 3um.
  ENC DP_V5 M5 < 3 ABUT<90 SINGULAR
}
ADP.E.1_V5_M6 { @ Metal6 enclose Via5 in dummy pad < 3um.
  ENC DP_V5 M6 < 3 ABUT<90 SINGULAR
}
ADP.E.1_VD_M6 { @ Meta6l enclose ViaD in dummy pad < 3um.
  ENC DP_VD M6 < 3 ABUT<90 SINGULAR
}
ADP.E.1_VD_MD { @ MD enclose ViaD in dummy pad < 3um.
  ENC DP_VD MD < 3 ABUT<90 SINGULAR
}

// ADP.W.1 is checked by VIAx.W.1 ( x= 1..4)
// ADP.W.2 is checked by VIA5.W.1

// Guideline

ADP.S.2 { @ dummy pad spacing < 2um.
  EXT DPDMY < 2 ABUT<90 SINGULAR REGION
}

ADP.W.3 { @ dummy pad width > 80um
  DPADG = INT DPDMY <= 80 REGION OPPOSITE ABUT>0<90
  DPDMY NOT DPADG
}

ADP.W.4 { @ dummy pad width < 40um
  INT DPDMY < 40  ABUT>0<90 SINGULAR
}



// Power Line
//===========

PL_V1 = PLDMY AND VIA1
PL_V2 = PLDMY AND VIA2
PL_V3 = PLDMY AND VIA3
PL_V4 = PLDMY AND VIA4
PL_V5 = PLDMY AND VIA5
PL_VD = PLDMY AND VIAD

ADP.R.0D { @ Via structure in Power Line
  GRP1 = (PL_V2 OR PL_V4) OR PL_VD
  GRP2 = (PL_V1 OR PL_V3) OR PL_V5
  GRP1 AND GRP2
}

ADP.S.4_V1 { @ Via1 spacing (the same level) < 0.58um.
  EXT PL_V1 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.4_V2 { @ Via2 spacing (the same level) < 0.58um.
  EXT PL_V2 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.4_V3 { @ Via3 spacing (the same level) < 0.58um.
  EXT PL_V3 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.4_V4 { @ Via4 spacing (the same level) < 0.58um.
  EXT PL_V4 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.4_V5 { @ Via5 spacing (the same level) < 0.58um.
  EXT PL_V5 < 0.58 ABUT<90 SINGULAR REGION
}
ADP.S.4_VD { @ ViaD spacing (the same level) < 0.58um.
  EXT PL_VD < 0.58 ABUT<90 SINGULAR REGION
}

ADP.C.3_V1_V2 { @ Vias spacing (different level) in chip corner power line < 0.23um.
  EXT PL_V1 PL_V2 < 0.23 ABUT<90 SINGULAR
}
ADP.C.3_V2_V3 { @ Vias spacing (different level) in chip corner power line < 0.23um.
  EXT PL_V2 PL_V3 < 0.23 ABUT<90 SINGULAR
}
ADP.C.3_V3_V4 { @ Vias spacing (different level) in chip corner power line < 0.23um.
  EXT PL_V3 PL_V4 < 0.23 ABUT<90 SINGULAR
}
ADP.C.3_V4_V5 { @ Vias spacing (different level) in chip corner power line < 0.23um.
  EXT PL_V4 PL_V5 < 0.23 ABUT<90 SINGULAR
}
ADP.C.3_V5_VD { @ Vias spacing (different level) in chip corner power line < 0.23um.
  EXT PL_V5 PL_VD < 0.23 ABUT<90 SINGULAR
}

ADP.E.2_V1_M1 { @ Metal1 enclose Via1 in chip corner power line < 0.2um.
  ENC PL_V1 M1 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V1_M2 { @ Metal2 enclose Via1 in chip corner power line < 0.2um.
  ENC PL_V1 M2 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V2_M2 { @ Metal2 enclose Via2 in chip corner power line < 0.2um.
  ENC PL_V2 M2 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V2_M3 { @ Metal3 enclose Via2 in chip corner power line < 0.2um.
  ENC PL_V2 M3 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V3_M3 { @ Metal3 enclose Via3 in chip corner power line < 0.2um.
  ENC PL_V3 M3 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V3_M4 { @ Metal4 enclose Via3 in chip corner power line < 0.2um.
  ENC PL_V3 M4 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V4_M4 { @ Metal4 enclose Via4 in chip corner power line < 0.2um.
  ENC PL_V4 M4 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V4_M5 { @ Metal5 enclose Via4 in chip corner power line < 0.2um.
  ENC PL_V4 M5 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V5_M5 { @ Metal5 enclose Via5 in chip corner power line < 0.2um.
  ENC PL_V5 M5 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_V5_M6 { @ Metal6 enclose Via5 in chip corner power line < 0.2um.
  ENC PL_V5 M6 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_VD_M6 { @ Metal6 enclose ViaD in chip corner power line < 0.2um.
  ENC PL_VD M6 < 0.2 ABUT<90 SINGULAR
}
ADP.E.2_VD_MD { @ MD enclose ViaD in chip corner power line < 0.2um.
  ENC PL_VD MD < 0.2 ABUT<90 SINGULAR
}



//METAL SLOT CHECKS
//================
//Bonding pad ,chip corner dummy pad ,and inductor need not put slot
#IFDEF CUP
SLT_EXD  = COPY DPDMY
SLT_EXDT = CBi OR DPDMY
#ELSE
SLT_EXD  = CBi OR DPDMY
SLT_EXDT = COPY SLT_EXD
#ENDIF
PAD_EXD = UBMi NOT INTERACT MDxd

M1EXD = M1xd NOT SLT_EXD

//M1 SLOT CHECKS
//==============

M1InnerHole = HOLES M1EXD INNER
M1BigHole   = SIZE M1InnerHole BY -5
M1Hole      = M1InnerHole OUTSIDE M1BigHole 
M1HoleSpace = M1Hole NOT M1EXD
FIM1c       = M1EXD OR M1HoleSpace
LM1X       = (SIZE (SIZE FIM1c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER) AND FIM1c 
M1HoleD    = M1HoleSpace AND LM1X

AMS.1.M1 { @ Wide Metal (>35um) must have slot.
  SIZE ( SIZE M1EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER
}

CONNECT M1HoleD LM1X
AMS.DN.M1 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM1X M1HoleD < 0.015
	[ AREA(M1HoleD) / AREA(LM1X) ] RDB M1Hole.density2 LM1X M1HoleD 
}
DISCONNECT

M1HOC  = HOLES M1EXD INNER EMPTY
M1HOD  = SIZE M1HOC BY 5 UNDEROVER   // Assume Metal Slot < 10um
M1HO   = M1HOC OUTSIDE M1HOD         // Metal slot (include not in wide metal)
FIM1   = M1EXD OR M1HO               // Metal with slot fill in
M1WMA  = SIZE FIM1 BY 17.5 UNDEROVER
M1WM   = M1WMA NOT OUTSIDE M1HO
M1SLT  = M1HO INSIDE M1WM

AM.W.1.M1 { @ Min. width for metal connected to wide metal 10um.
  M1WMD = M1WMA AND M1EXD
  M1WME = M1WMD TOUCH M1SLT
  S_FIM1 = M1xd NOT M1WME
  S_FIM1E = S_FIM1 COIN OUTSIDE EDGE M1WME // check edge
  G_FIM1E = PATH LENGTH S_FIM1E >= 10      // good edge
  B_FIM1E = PATH LENGTH S_FIM1E < 10       // bad edge
  B_FIM1E TOUCH EDGE (M1WME NOT TOUCH EDGE G_FIM1E)
}
M2EXD = M2xd NOT SLT_EXD

//M2 SLOT CHECKS
//==============

M2InnerHole = HOLES M2EXD INNER
M2BigHole   = SIZE M2InnerHole BY -5
M2Hole      = M2InnerHole OUTSIDE M2BigHole 
M2HoleSpace = M2Hole NOT M2EXD
FIM2c       = M2EXD OR M2HoleSpace
LM2X       = (SIZE (SIZE FIM2c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER) AND FIM2c 
M2HoleD    = M2HoleSpace AND LM2X

AMS.1.M2 { @ Wide Metal (>35um) must have slot.
  SIZE ( SIZE M2EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER
}

CONNECT M2HoleD LM2X
AMS.DN.M2 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM2X M2HoleD < 0.015
	[ AREA(M2HoleD) / AREA(LM2X) ] RDB M2Hole.density2 LM2X M2HoleD 
}
DISCONNECT

M2HOC  = HOLES M2EXD INNER EMPTY
M2HOD  = SIZE M2HOC BY 5 UNDEROVER   // Assume Metal Slot < 10um
M2HO   = M2HOC OUTSIDE M2HOD         // Metal slot (include not in wide metal)
FIM2   = M2EXD OR M2HO               // Metal with slot fill in
M2WMA  = SIZE FIM2 BY 17.5 UNDEROVER
M2WM   = M2WMA NOT OUTSIDE M2HO
M2SLT  = M2HO INSIDE M2WM

AM.W.1.M2 { @ Min. width for metal connected to wide metal 10um.
  M2WMD = M2WMA AND M2EXD
  M2WME = M2WMD TOUCH M2SLT
  S_FIM2 = M2xd NOT M2WME
  S_FIM2E = S_FIM2 COIN OUTSIDE EDGE M2WME // check edge
  G_FIM2E = PATH LENGTH S_FIM2E >= 10      // good edge
  B_FIM2E = PATH LENGTH S_FIM2E < 10       // bad edge
  B_FIM2E TOUCH EDGE (M2WME NOT TOUCH EDGE G_FIM2E)
}
M3EXD = M3xd NOT SLT_EXD

//M3 SLOT CHECKS
//==============

M3InnerHole = HOLES M3EXD INNER
M3BigHole   = SIZE M3InnerHole BY -5
M3Hole      = M3InnerHole OUTSIDE M3BigHole 
M3HoleSpace = M3Hole NOT M3EXD
FIM3c       = M3EXD OR M3HoleSpace
LM3X       = (SIZE (SIZE FIM3c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER) AND FIM3c 
M3HoleD    = M3HoleSpace AND LM3X

AMS.1.M3 { @ Wide Metal (>35um) must have slot.
  SIZE ( SIZE M3EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER
}

CONNECT M3HoleD LM3X
AMS.DN.M3 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM3X M3HoleD < 0.015
	[ AREA(M3HoleD) / AREA(LM3X) ] RDB M3Hole.density2 LM3X M3HoleD 
}
DISCONNECT

M3HOC  = HOLES M3EXD INNER EMPTY
M3HOD  = SIZE M3HOC BY 5 UNDEROVER   // Assume Metal Slot < 10um
M3HO   = M3HOC OUTSIDE M3HOD         // Metal slot (include not in wide metal)
FIM3   = M3EXD OR M3HO               // Metal with slot fill in
M3WMA  = SIZE FIM3 BY 17.5 UNDEROVER
M3WM   = M3WMA NOT OUTSIDE M3HO
M3SLT  = M3HO INSIDE M3WM

AM.W.1.M3 { @ Min. width for metal connected to wide metal 10um.
  M3WMD = M3WMA AND M3EXD
  M3WME = M3WMD TOUCH M3SLT
  S_FIM3 = M3xd NOT M3WME
  S_FIM3E = S_FIM3 COIN OUTSIDE EDGE M3WME // check edge
  G_FIM3E = PATH LENGTH S_FIM3E >= 10      // good edge
  B_FIM3E = PATH LENGTH S_FIM3E < 10       // bad edge
  B_FIM3E TOUCH EDGE (M3WME NOT TOUCH EDGE G_FIM3E)
}
M4EXD = M4xd NOT SLT_EXD

//M4 SLOT CHECKS
//==============

M4InnerHole = HOLES M4EXD INNER
M4BigHole   = SIZE M4InnerHole BY -5
M4Hole      = M4InnerHole OUTSIDE M4BigHole 
M4HoleSpace = M4Hole NOT M4EXD
FIM4c       = M4EXD OR M4HoleSpace
LM4X       = (SIZE (SIZE FIM4c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER) AND FIM4c 
M4HoleD    = M4HoleSpace AND LM4X

AMS.1.M4 { @ Wide Metal (>35um) must have slot.
  SIZE ( SIZE M4EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER
}

CONNECT M4HoleD LM4X
AMS.DN.M4 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM4X M4HoleD < 0.015
	[ AREA(M4HoleD) / AREA(LM4X) ] RDB M4Hole.density2 LM4X M4HoleD 
}
DISCONNECT

M4HOC  = HOLES M4EXD INNER EMPTY
M4HOD  = SIZE M4HOC BY 5 UNDEROVER   // Assume Metal Slot < 10um
M4HO   = M4HOC OUTSIDE M4HOD         // Metal slot (include not in wide metal)
FIM4   = M4EXD OR M4HO               // Metal with slot fill in
M4WMA  = SIZE FIM4 BY 17.5 UNDEROVER
M4WM   = M4WMA NOT OUTSIDE M4HO
M4SLT  = M4HO INSIDE M4WM

AM.W.1.M4 { @ Min. width for metal connected to wide metal 10um.
  M4WMD = M4WMA AND M4EXD
  M4WME = M4WMD TOUCH M4SLT
  S_FIM4 = M4xd NOT M4WME
  S_FIM4E = S_FIM4 COIN OUTSIDE EDGE M4WME // check edge
  G_FIM4E = PATH LENGTH S_FIM4E >= 10      // good edge
  B_FIM4E = PATH LENGTH S_FIM4E < 10       // bad edge
  B_FIM4E TOUCH EDGE (M4WME NOT TOUCH EDGE G_FIM4E)
}
M5EXD = M5xd NOT SLT_EXDT

//M5 SLOT CHECKS
//==============

M5InnerHole = HOLES M5EXD INNER
M5BigHole   = SIZE M5InnerHole BY -5
M5Hole      = M5InnerHole OUTSIDE M5BigHole 
M5HoleSpace = M5Hole NOT M5EXD
FIM5c       = M5EXD OR M5HoleSpace
LM5X       = (SIZE (SIZE FIM5c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER) AND FIM5c 
M5HoleD    = M5HoleSpace AND LM5X

AMS.1.M5 { @ Wide Metal (>35um) must have slot.
  SIZE ( SIZE M5EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER
}

CONNECT M5HoleD LM5X
AMS.DN.M5 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM5X M5HoleD < 0.015
	[ AREA(M5HoleD) / AREA(LM5X) ] RDB M5Hole.density2 LM5X M5HoleD 
}
DISCONNECT

M5HOC  = HOLES M5EXD INNER EMPTY
M5HOD  = SIZE M5HOC BY 5 UNDEROVER   // Assume Metal Slot < 10um
M5HO   = M5HOC OUTSIDE M5HOD         // Metal slot (include not in wide metal)
FIM5   = M5EXD OR M5HO               // Metal with slot fill in
M5WMA  = SIZE FIM5 BY 17.5 UNDEROVER
M5WM   = M5WMA NOT OUTSIDE M5HO
M5SLT  = M5HO INSIDE M5WM

AM.W.1.M5 { @ Min. width for metal connected to wide metal 10um.
  M5WMD = M5WMA AND M5EXD
  M5WME = M5WMD TOUCH M5SLT
  S_FIM5 = M5xd NOT M5WME
  S_FIM5E = S_FIM5 COIN OUTSIDE EDGE M5WME // check edge
  G_FIM5E = PATH LENGTH S_FIM5E >= 10      // good edge
  B_FIM5E = PATH LENGTH S_FIM5E < 10       // bad edge
  B_FIM5E TOUCH EDGE (M5WME NOT TOUCH EDGE G_FIM5E)
}
PAD_EXD6 = SIZE PAD_EXD BY 2 INSIDE OF M6xd STEP 0.32 
M6EXD = M6xd NOT ( SLT_EXDT OR PAD_EXD6 )

//M6 SLOT CHECKS
//==============

M6InnerHole = HOLES M6EXD INNER
M6BigHole   = SIZE M6InnerHole BY -5
M6Hole      = M6InnerHole OUTSIDE M6BigHole 
M6HoleSpace = M6Hole NOT M6EXD
FIM6c       = M6EXD OR M6HoleSpace
LM6X       = (SIZE (SIZE FIM6c BY 1.0 UNDEROVER) BY 17.5 UNDEROVER) AND FIM6c 
M6HoleD    = M6HoleSpace AND LM6X

AMS.1.M6 { @ Wide Metal (>35um) must have slot.
  SIZE ( SIZE M6EXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER
}

CONNECT M6HoleD LM6X
AMS.DN.M6 { @ Min. Hole density for metal lines that need to apply slot  1.5%
    NET AREA RATIO LM6X M6HoleD < 0.015
	[ AREA(M6HoleD) / AREA(LM6X) ] RDB M6Hole.density2 LM6X M6HoleD 
}
DISCONNECT

M6HOC  = HOLES M6EXD INNER EMPTY
M6HOD  = SIZE M6HOC BY 5 UNDEROVER   // Assume Metal Slot < 10um
M6HO   = M6HOC OUTSIDE M6HOD         // Metal slot (include not in wide metal)
FIM6   = M6EXD OR M6HO               // Metal with slot fill in
M6WMA  = SIZE FIM6 BY 17.5 UNDEROVER
M6WM   = M6WMA NOT OUTSIDE M6HO
M6SLT  = M6HO INSIDE M6WM

AM.W.1.M6 { @ Min. width for metal connected to wide metal 10um.
  M6WMD = M6WMA AND M6EXD
  M6WME = M6WMD TOUCH M6SLT
  S_FIM6 = M6xd NOT M6WME
  S_FIM6E = S_FIM6 COIN OUTSIDE EDGE M6WME // check edge
  G_FIM6E = PATH LENGTH S_FIM6E >= 10      // good edge
  B_FIM6E = PATH LENGTH S_FIM6E < 10       // bad edge
  B_FIM6E TOUCH EDGE (M6WME NOT TOUCH EDGE G_FIM6E)
}

//MD SLOT CHECKS
//==============
// Bonding pad, chip corner dummy pad, and inductor need not put slot

UBM_EXDD    = SIZE UBMi BY 2 INSIDE OF MDxd STEP 0.32 	// For RDL
MDEXD       = MDxd NOT ( DPDMY OR UBM_EXDD )
MDInnerHole = HOLES MDEXD INNER
MDBigHole   = SIZE MDInnerHole BY -5  	// Holes with width less than 10um will be filled back
MDHole      = MDInnerHole OUTSIDE MDBigHole	
MDHoleSpace = MDHole NOT MDEXD
FIMDc       = MDEXD OR MDHoleSpace
LMDX       = (SIZE (SIZE FIMDc BY 1.0 UNDEROVER) BY 17.5 UNDEROVER) AND FIMDc  
MDHoleD     = MDHoleSpace AND LMDX

AMS.1.MD { @ Wide Metal (>35um) must have slot
  SIZE ( SIZE MDEXD BY 1.0 UNDEROVER ) BY 17.5 UNDEROVER 
}

CONNECT MDHoleD LMDX
AMS.DN.MD { @ Min. Hole density for metal lines that need to apply slot  1.5%
  NET AREA RATIO LMDX MDHoleD < 0.015
    [ AREA(MDHoleD) / AREA(LMDX) ] RDB MDHole.density2 LMDX MDHoleD 
}
DISCONNECT

MDHOC = HOLES MDEXD INNER EMPTY
MDHOD  = SIZE MDHOC BY 5 UNDEROVER   // Assume Metal Slot < 10um
MDHO   = MDHOC OUTSIDE MDHOD         // Metal slot (include not in wide metal)
FIMD   = MDEXD OR MDHO                  // Metal with slot fill in
MDWMA  = SIZE FIMD BY 17.5 UNDEROVER
MDWM   = MDWMA NOT OUTSIDE MDHO
MDSLT = MDHO INSIDE MDWM

AM.W.1.MD { @ Min. width for metal connected to wide metal 10um.
  MDWMD = MDWMA AND MDEXD
  MDWME = MDWMD TOUCH MDSLT
  S_FIMD = MDxd NOT MDWME
  S_FIMDE = S_FIMD COIN OUTSIDE EDGE MDWME
  G_FIMDE = PATH LENGTH S_FIMDE >= 10
  B_FIMDE = PATH LENGTH S_FIMDE < 10
  B_FIMDE TOUCH EDGE (MDWME NOT TOUCH EDGE G_FIMDE)
}


//I/O ESD Guidance 
//================

EPACT = PACT AND SDI
ENACT = NACT AND SDI
ECO = (CO AND SDI) AND OD
EPMOS = EPACT ENCLOSE ALL_GATE
ENMOS = ENACT ENCLOSE ALL_GATE
EGTE = ALL_GATE AND SDI
EGTE_W = EGTE INSIDE EDGE OD
EPSD = EPMOS NOT EGTE
ENSD = ENMOS NOT EGTE
ENSD_NCO = (ENSD NOT INTERACT ECO) NOT INTERACT PTAP
ENSD_WCO = ENSD NOT ENSD_NCO
ENSD_SRC = ENSD_WCO OUTSIDE RPO

ESD1_GATE = EGTE AND ESD1DMY
ESD1_NCS_GATE = ESD1_GATE NOT INTERACT ENSD_NCO
ESD1_TOL = (ENMOS AND ESD1DMY) INTERACT ENSD_NCO
ESD1_NCS = (ENMOS AND ESD1DMY) NOT INTERACT ENSD_NCO
ENSD_NCO_ESD1DMY = ENSD_NCO INTERACT ESD1DMY
ESD1_TOL_GATE = EGTE INTERACT ENSD_NCO_ESD1DMY
ESD1_TOL_GATE1 = ESD1_TOL_GATE NOT INTERACT ENSD_SRC
ESD1_TOL_GATE2 = ESD1_TOL_GATE INTERACT ENSD_SRC 
ESD1_NCS_GATE_W = ESD1_NCS_GATE INSIDE EDGE OD
ESD1_TOL_GATE1_W = ESD1_TOL_GATE1 INSIDE EDGE OD
ESD1_TOL_GATE2_W = ESD1_TOL_GATE2 INSIDE EDGE OD

ESD2_GATE = EGTE AND ESD2DMY
ESD2_REG_GATE = ESD2_GATE NOT INTERACT ENSD_NCO
ESD2_TOL_GATE = ESD2_GATE INTERACT ENSD_NCO
ESD2_TOL_GATE1 = ESD2_TOL_GATE NOT INTERACT ENSD_SRC
ESD2_TOL_GATE2 = ESD2_TOL_GATE INTERACT ENSD_SRC 
ESD2_TOL = (ENMOS AND ESD2DMY) INTERACT ENSD_NCO
ESD2_REG_GATE_W = ESD2_REG_GATE INSIDE EDGE OD
ESD2_TOL_GATE1_W = ESD2_TOL_GATE1 INSIDE EDGE OD
ESD2_TOL_GATE2_W = ESD2_TOL_GATE2 INSIDE EDGE OD

RPO1 = ((RPO AND SDI) OUTSIDE ESD1DMY) OUTSIDE ESD2DMY
EGTE1 = ((EGTE OUTSIDE ESD1DMY) OUTSIDE ESD2DMY) NOT INTERACT ENSD_NCO
EGTE1_W = EGTE1 INSIDE EDGE OD

ERPO = RPO AND SDI
ERPOH = HOLES ERPO
ERPOA = ERPOH OR ERPO
ECOS = ECO OUTSIDE ERPOA

HEGT = EGTE AND OD2
LEGT = EGTE NOT OD2
HEGN = HEGT AND NP
HEGP = HEGT AND PP


#IFNDEF 5V
ESD.GUIDE.1 { @ ESD1DMY is for NMOS only / ESD2DMY is for 3.3V NMOS only
  ESD1DMY AND GATE_PP
  ESD2DMY AND GATE_PP
  ESD2DMY AND (GATE_NP NOT OD2)
}

ESD.GUIDE.4 { @ I/O - Gate 20um <= width <= 60um.
  PATH LENGTH EGTE_W > 0 < 20
  PATH LENGTH EGTE_W > 60 < 999
}
ESD.5A { @ For 3.3V high voltage tolerant NMOS, RPO should completely cover 1st poly gate
         @ and overlap 2nd poly gate >= 0.05um
  X = ESD2_TOL_GATE NOT RPO
  ESD2_TOL NOT INTERACT X
  ESD2_TOL_GATE1 NOT RPO
  ESD2_TOL_GATE2 OUTSIDE RPO
  INT ESD2_TOL_GATE2 RPO < 0.05 ABUT<90 OPPOSITE REGION
}
ESD.5B { @ For 1.8V high voltage tolerant NMOS, RPO should completely cover 1st poly gate
         @ and should not cover 2nd poly gate, RPO space to 2nd poly gate >= 0.25um
  X = ESD1_TOL_GATE AND RPO
  ESD1_TOL NOT INTERACT X
  ESD1_TOL_GATE1 NOT RPO
  ESD1_TOL_GATE2 AND RPO
  Y = RPO INTERACT ESD1_TOL_GATE1
  EXT Y ESD1_TOL_GATE2_W < 0.25 ABUT<90 OPPOSITE REGION
}
ESD.5C { @ For 3.3V regular NMOS, RPO needs to overlap poly gate >= 0.05um
  INT ESD2_REG_GATE RPO < 0.05 ABUT<90 OPPOSITE REGION 
}
ESD.WARN.1 { @ CO can't inserted between gate and RPO for 1.8V NMOS and all PMOS I/O pattern.
  RED  = (EPSD OR ENSD) INTERACT RPO1
  XRPO = RED NOT RPO1
  XRPG = XRPO TOUCH EGTE1
  XRPG INTERACT ECO
}
ESD.5D { @ For the grounded gate ESD protection device between Vcc/Vss, RPO should fully cover
         @ all poly gate and source drain.
  ESD1_NCS_GATE NOT RPO	 
}
ESD.5E { @ For all PMOS and 1.8V regular NMOS, RPO space to gate 0.45um
  EXT RPO1 EGTE1_W < 0.45 ABUT<90 OPPOSITE REGION
}
ESD.5F { @ For 3.3V high voltage tolerant, 3.3V regular NMOS, and 1.8V NMOS high voltage tolerant
         @ min. width of RPO on drain side and RPO edge to OD edge 1.95um
  X = (ENSD_WCO AND ESD2DMY) AND RPO
  INT X < 1.95 ABUT<90 REGION
  Z = ((ENSD_WCO AND ESD1DMY) AND RPO) INTERACT ESD1_TOL_GATE1
  INT Z < 1.95 ABUT<90 REGION
}
ESD.5G { @ For 1.8V regular NMOS and all PMOS 
         @ min. width of RPO on drain side and RPO edge to OD edge 1.5um
  Y = RPO1 AND OD
  INT Y < 1.5 ABUT<90 REGION
}  
ESD.5H { @ For 3.3V high voltage tolerant NMOS, 1st and 2nd poly gate spacing is >=0.25um
  X = ENSD_NCO INTERACT ESD2DMY
  INT X < 0.25 ABUT<90 REGION
}
ESD.5I { @ For 1.8V high voltage tolerant NMOS, 1st and 2nd poly gate spacing is >=0.25um
  //X = ENSD_NCO INTERACT ESD1DMY
  INT ENSD_NCO_ESD1DMY < 0.25 ABUT<90 REGION
}
ESD.6 { @ Min. space between CO on source side to poly gate 0.75um
  EXT ECOS EGTE_W < 0.75 ABUT<90 OPPOSITE REGION
}  
#IFDEF 1.5V
ESD.9A { @ 1.5V IO ESD NMOS/PMOS gate length < 0.25um
  INT LEGT < 0.25 ABUT<90 SINGULAR REGION
}
#ENDIF
#IFDEF 1.8V
ESD.9A { @ 1.8V IO ESD NMOS/PMOS gate length < 0.25um
  INT LEGT < 0.25 ABUT<90 SINGULAR REGION
}
#ENDIF
#IFDEF 2.5V
ESD.9B { @ 2.5V IO ESD NMOS gate length < 0.3um
  INT HEGN < 0.3 ABUT<90 SINGULAR REGION
}
ESD.9C { @ 2.5V IO ESD PMOS gate length < 0.3um
  INT HEGP < 0.3 ABUT<90 SINGULAR REGION
}
#ENDIF
#IFDEF 3.3V
ESD.9B { @ 3.3V IO ESD NMOS gate length < 0.4um
  INT HEGN < 0.4 ABUT<90 SINGULAR REGION
}
ESD.9C { @ 3.3V IO ESD PMOS gate length < 0.3um
  INT HEGP < 0.3 ABUT<90 SINGULAR REGION
}
#ENDIF
#ENDIF

// begin of ESD.11, butted or inserted pickup is not allowed
EAct = EPACT OR ENACT
DTap = NTAP OR PTAP
EActUp3 = SIZE EAct BY 3 OUTSIDE OF DTap STEP 0.22*0.7
DTap2Check = DTap INTERACT EActUp3
DTapHole = HOLES DTap2Check INNER
DTapSuspect = DTap2Check NOT TOUCH DTapHole

ESD.11 { @ butted or inserted pickup is not allowed
    ENCLOSE RECTANGLE DTapSuspect 0.22 20
}



// LATCH-UP CHECKS
//==================

GROUP LATCH_UP_CHECK LAT.2 LAT.3P LAT.3N

PMOS = PACT ENCLOSE ALL_GATE
NMOS = NACT ENCLOSE ALL_GATE
PASD = PMOS NOT ALL_GATE
NASD = NMOS NOT ALL_GATE


LAT.2 { @ I/O - NMOS to PMOS space < 15um.     
  EXT EPMOS ENMOS < 15 ABUT>0<90 SINGULAR
}

LAT.3P { @ N-well pickup OD to PMOS space > 30um
  NWELi_US = SIZE NWELi BY - 0.085 // 0.12/1.415 = 0.085
  // 30/1.415 = 21.201, (0.6 + 2 * 0.085)/1.415 = 0.544
  NTAP_OS = SIZE NTAP BY 21.201 INSIDE OF NWELi_US STEP 0.544 TRUNCATE 0.544
  PASD_FAR = PASD NOT NTAP_OS
  PASD_FAR_FILTER = SIZE PASD_FAR BY 30
  NTAP_NEAR = NTAP INTERACT PASD_FAR_FILTER

  // doing an more accurate sizing
  NTAP_NEAR_OS = SIZE NTAP_NEAR BY 0.10
  NTAP_90_CORNER = INT NTAP_NEAR_OS < 0.06 ABUT==90 INTERSECTING ONLY REGION
  NTAP_OCT = NTAP_NEAR_OS NOT NTAP_90_CORNER
  NTAP_135_CORNER = INT NTAP_OCT < 0.04 ABUT>134<136 INTERSECTING ONLY REGION
  NTAP_HEX = NTAP_OCT NOT NTAP_135_CORNER
  // 30-0.10 = 29.9
  NTAP_HEX_OS = SIZE NTAP_HEX BY 29.9 INSIDE OF NWELi_US STEP 0.544 TRUNCATE 0.544
  PASD_FAR NOT NTAP_HEX_OS
}

LAT.3N { @ P-well pickup OD to NMOS space > 30um
  PWELi_US = SIZE PWELi BY - 0.085 // 0.12/1.415 = 0.085
  // 30/1.415 = 21.201, (0.86 + 2 * 0.085)/1.415 = 0.728
  PTAP_OS = SIZE PTAP BY 21.201 INSIDE OF PWELi_US STEP 0.728 TRUNCATE 0.728
  NASD_FAR = NASD NOT PTAP_OS
  NASD_FAR_FILTER = SIZE NASD_FAR BY 30
  PTAP_NEAR = PTAP INTERACT NASD_FAR_FILTER

  // doing an more accurate sizing
  PTAP_NEAR_OS = SIZE PTAP_NEAR BY 0.10
  PTAP_90_CORNER = INT PTAP_NEAR_OS < 0.06 ABUT==90 INTERSECTING ONLY REGION
  PTAP_OCT = PTAP_NEAR_OS NOT PTAP_90_CORNER
  PTAP_135_CORNER = INT PTAP_OCT < 0.04 ABUT>134<136 INTERSECTING ONLY REGION
  PTAP_HEX = PTAP_OCT NOT PTAP_135_CORNER
  // 30-0.10 = 29.9
  PTAP_HEX_OS = SIZE PTAP_HEX BY 29.9 INSIDE OF PWELi_US STEP 0.728 TRUNCATE 0.728
  NASD_FAR NOT PTAP_HEX_OS
}





#IFNDEF 5V
// NT_N
//======

NTN_OD = OD NOT OUTSIDE NTN
NTN_PO = POLY AND NTN
NTN_GATE_W = NTN_PO INSIDE EDGE NTN_OD

NT_N.I.2 {@ only one OD region allowed to be put in an NT_N region
   NTN ENCLOSE OD > 1
}
NT_N.I.3 {@ A P+ region is not allowed to be put in an NT_N region
   NTN AND PP
}
NTN_PO_W    = NTN_PO COIN INSIDE EDGE POLY
NT_N.I.4 {@ A bent poly region is not allowed to put in an NT_N region
  EXT NTN_PO < 0.18 ABUT == 90 INTERSECTING ONLY
  EXT NTN_PO < 0.18 ABUT == 135 INTERSECTING ONLY
}
NT_N.W.1 {@ Minimum width of a NT_N region < 0.74
   INT NTN < 0.74 SINGULAR ABUT<90 REGION
}
#IFDEF 1.8V
NT_N.W.2 {@ Minimum poly gate dimension of a 1.8V blocked NT_N device < 0.5
   INT NTN_GATE_W < 0.5 ABUT<90 REGION
}
#ENDIF
#IFDEF 1.5V
NT_N.W.2.LV {@ Minimum poly gate dimension of a 1.5V blocked NT_N device < 0.37
   INT NTN_GATE_W < 0.37 ABUT<90 REGION
}
#ENDIF
NT_N.W.2B {@ Minimum poly gate dimension of a 3.3V blocked NT_N device < 1.2
   Z = NTN_GATE_W INSIDE EDGE OD2
   INT Z < 1.2 ABUT<90 REGION
}
NT_N.S.1 {@ Minimum space between two NT_N regions < 0.86
   EXT NTN < 0.86 ABUT<90 SINGULAR REGION
}
NT_N.E.1 {@ Maximum and Minimum extension from NT_N region beyond an NP OD region 0.26
  A = NTN INTERACT OD
  B = OD INTERACT NTN
  C = SIZE B BY 0.26
  D = SIZE A BY -0.26
  A XOR C
  B XOR D
}
#IFDEF 1.5V
#IFDEF 3.3V
NT_N.E.2.LV {@ OD2 enclose 3.3V NTN < 0.86um
   ENC NTN OD2 < 0.86 ABUT<90 SINGULAR
   NTN CUT OD2    
}
#ENDIF
#IFDEF 2.5V
NT_N.E.2.LV {@ OD2 enclose 2.5V NTN < 0.86um
   ENC NTN OD2 < 0.86 ABUT<90 SINGULAR
   NTN CUT OD2
}
#ENDIF
#ENDIF
NT_N.C.1 {@ MInimum clearance from NT_N to OD < 0.52
   EXT OD NTN < 0.52 SINGULAR ABUT<90 REGION
   OD CUT NTN    
}
NT_N.C.2 {@ Minimum clearance frome a NT_N region to NWEL edge < 1.66
   EXT NTN NWEL < 1.66 SINGULAR ABUT<90 REGION
   NTN AND NWEL    
}
#IFDEF 1.5V
NT_N.C.3.LV { @ OD2 space to 1.5V NTN < 0.86um
   EXT NTN OD2 < 0.86 ABUT<90 SINGULAR
}
#ENDIF
NT_N.PO.1 {@ Minimum overlap of a PO region extended into field oxide(endcap) < 0.35
   ENC NTN_OD POLY < 0.35 ABUT<90 SINGULAR REGION
}

#ENDIF  //#IFNDEF 5V

GROUP DENSITY_CHECK M?.R.1 PO.R.3
// DRC UNSELECT CHECK DENSITY_CHECK





// *************************************************************************
// * 0.18um Calibre DRC COMMAND FILE - CM18S3_6M.13a (02/26/2004)  *
// * FOR TSMC 0.18UM MIXED SIGNAL/RF 1P6M SALICIDE 1.8V/3.3V PROCESS       *
// * (DESIGN RULE DOCUMENT: T-018-MM-DR-001 Rev1.3
//                          T-018-LO-DR-001 Rev2.4 )                  *
// *************************************************************************

//
//  DISCLAIMER
//
//  The information contained herein is provided by TSMC on an "AS IS" basis
//  without any warranty, and TSMC has no obligation to support or otherwise
//  maintain the information.  TSMC disclaims any representation that the
//  information does not infringe any intellectual property rights or proprietary
//  rights of any third parties.  There are no other warranties given by TSMC,
//  whether express, implied or statutory, including, without limitation, implied
//  warranties of merchantability and fitness for a particular purpose.
//
//  STATEMENT OF USE
//
//  This information contains confidential and proprietary information of TSMC.
//  No part of this information may be reproduced, transmitted, transcribed,
//  stored in a retrieval system, or translated into any human or computer
//  language, in any form or by any means, electronic, mechanical, magnetic,
//  optical, chemical, manual, or otherwise, without the prior written permission
//  of TSMC.  This information was prepared for informational purpose and is for
//  use by TSMC's customers only.  TSMC reserves the right to make changes in the
//  information at any time and without notice.
//
//-----------------------------------------------------------------------------------
//
//  NOTICE: (Read Me First!)
//
//  1. If the input GDS file does not include all the layers in the
//     INPUT LAYER BLOCK, for example, they are generated by logic
//     operations, please make sure the consistence with original
//     layer definition.
//  2. The runset is tested and developed on Calibre ver 9.1_2.1 (Feb, 2002), please use this or
//     newer version of Calibre to execute this runset.

//-------------------------------------------------------------------------------------

//***************************************************************************************************
// 	CORRECT USAGE: (important!!)
//***************************************************************************************************
// *** Warning: This DRC file CM18S3_6M.13a cannot be run alone! ***
//
//    This DRC file CM18S3_6M.13a of Mixed_Signal process (T-018-MM-DR-001)
// needs to be combined with the DRC file of generic process (T-018-LO-DR-001)
// to get the complete Mixed_Signal process DRC file. A syntax error will be reported by
// Calibre DRC tool when CM18S3_6M.13a is run alone. Please be sure
// to complete the following procedures for correct usage of this DRC deck.
//
// Procedures:
//
// 1. Please download the most update CL018G (generic) process DRC deck from TSMC-
//    online. Suppose 6 metal layer process has been chosen, then the generic DRC
//    command file needed is CL18S3_6M.24a (version may be varied!
//
// 2. Use the unix command 'cat' to create this Mixed_Signal process DRC file
//    (assuming % is the unix prompt):
//
//    %cat CL18S3_6M.24a CM18S3_6M.13a > CL018G+Mixed_Signal.drc
//
//    As a result, CL018G+Mixed_Signal.drc is the complete DRC command file of Mixed_Signal process.
//
//******************************************************************************************
//
// REVISION:
// 
// 1.1a  09/29/00 Kevin Liu
//       1) Follow 0.18um Logic 1P6M Salicide 1.8V/3.3V Design Rule
//          Version: 2.1
//       new check:
//       1) DNW.C.2, DNW.C.3
//       revise check:
//       1) DNW.I.3
//       2) LAT.3N / LAT.3P
// 1.1b 10/24/00 Kevin Liu
//      revise check: CTM rule / RPO.C.3 / ESD.5.WARN.2 
// 1.1c 11/15/00 Kevin Liu
//	revise layer: DMN2V    184
//	revise check: ESD.6
// 1.1d 11/27/00 Kevin Liu
//	remove check: DNW.I.3
// 1.1e 06/12/01 Kevin Liu
//	ATTENTION!!!
//      Follow 0.18um Logic 1P6M Salicide 1.8V/3.3V Design Rule
//      Version: 2.2
//	1) Remove all layers V-Notches check.
//	2) Change layers NWELL/NP/PP/Metal2~Metal6/VIA2~VIA5 methodology to solve SRAM
//	   using NOT INSIDE EXCL
//	3) Rule change: NP.E.6/PP.E.6 added (RPO AND POLY) NOT IMP
//	4) FUSE rules are removed by this deck
//	5) Dummy Pad & Power Line remove Contact check
//	6) LAT.3N & LAT.3P methodology change
//	7) Revise check: AM.W.3.Mx (x = 1~6)
// 1.2a 07/24/01 C.S.Yang
//      add rule check:
//      1) DNW.C.4
//      2) NTN.I.6
//      3) VTMN.I.5
//      4) VTMP.I.5
//      5) HRI.R.2
//      6) CTM.S.6;CTM.A.1
//      revise rule check:
//      1) NTN.W.1
//      2) RPO.O.1
//      3) HRI.C.1/HRI.C.2/HRI.E.3/HRI.R.1
//      4) M6T.S.2
//      remove rule:
//      HRI.O.1/HRI.E.1/HRI.E.2/HRI.C.5/HRI.R.2
// 1.2b 08/01/01 C.S.Yang
//      revise check: thick top metal rule M6T.S.1
// 1.2c 10/05/01 C.S.Yang
//      revise check: 
//      1) PO.R.1A not VARDMY
//      2) latch-up rule
//   1.2d  07/24/2003 Yating Chuang
//      1) Modulized runset of mixed-signal process, remove the duplicate sections.
//	   User need to combin this runset after Logic deck to execute DRC.
//      2) Modify CTM.S.4a to use net area ratio instead of density command. 
//      3) Enhance CTM.I.1/.2 with ENCLOSE RECTANGLE to measure the dimension more stricktly.
//      4) Modify DNW.I.1: remove check DNW inside NW.
//      5) Revise CTM.S.2, add checking between two dummy CTM reginos.
//   1.2e  11/06/2003 Yating Chuang
//      1) Revise CTM.S.3, fix false error in spacing between two dummy Mn+1 of capacitor bottom plate. 
//      2) Revise _M6T.E.3,_M6T.C.1, allow M6T(inductor) across the boundary of INDDUMMY.
//      3) Revise CTM.I.2, both width and length are bigger than 35um is a violation.   
//      4) Add check in CTM.R.4, CTM5 without CTMDMY is not allow. 
//      5) Add _M6T.R.1: density check of M6T area(exclude application for inductor). 
//   1.2f.pre  01/28/2004 Chris Yao
//      1) Revise _M6T.S.2: exclude application for inductor
//      2) Revise CTM.R.4: capacitor CTM (TCTM) should be covered by CTMDMY. 
//   1.3a  02/20/2004 Chris Yao
//      1) Take off DNW.I.2&DNW.I.3. 
//      2) Modify DNW.E.1: DNW can be fully covered by NW(see DNW.I.1).
//      3) Revise _PO.W.1.MM: change min. resistor width to 1um 
//      4) Revise HRI.C.2: change "unrelated PP region" to PP region only. 
//      5) Modify CTM.I.3: metal routing is allowed under CTM.      
//      6) Modify _NT_N.I.4.MM&_NT_N.E.1.MM: exclude application for inductor 
//      7) Modify _M6T.I.1/_M6T.I.2: allow Mtop-2 inside INDDMY if use 3 terminals inductor, 
//         and allow M1 substrate pick up node inside INDDMY. 
//      8) Modify _M6T.E.3: add ABUT > 0 for PDK layout.
////////////////////////////////////////////////////////////////////////////////////////////
//
//  DUMMY LAYER REQUIRED:
//
//  1) HOTWL- Hot N-Well
//            N-Well not connected to the most positive
//            voltage Vdd is defined as Hot N-Well. It
//            must follow different width and space rules
//            from the N-Well connected to Vdd (Cold N-
//            Well). Use "HOTWL" layer to exactly cover
//            the Hot N-Well area for correct N-Well DRC.
//
//  2) EXCL - unDRC area
//            If there's any area with different rules
//            and not to be checked in this run, use the
//            "EXCL" layer to exactly cover the area to
//            be excluded.
//
//  3) SDI - I/O ESD Protection Circuit
//           For I/O guidance rule checking, use "SDI"
//           layer to designate the ESD area to checked.
//           The whole ESD devices should be covered by
//           "SDI".
//
//  4) DPDMY - Dummy Pad area
//           For chip corner dummy pad, use "DPDUMMY" layer to
//           cover dummy pad area.
//  5) PLDMY - Power Line
//           For chip corner power line, use "PLDUMMY" layer to
//           cover whole power line area.
//
//  6) RWDMY - NWell Resistor
//            The N-Well region covered by both RWDMY and
//            RPO is the NW within OD resistor.
//            The N-Well region covered by only RWDMY is
//            the NW under STI resistor.
//
//  7) DRCDMY - TSMC reserved layer
//
//  8) ESD1DMY - IO ESD region dummy layer, RPO must enclose whole gate
//     ESD2DMY - RPO enclose gate 0.05 for 3.3V
//
//  9) DMN2V   - dummy layer to avoid N2V in N+ poly resistor
//     DMP2V   - dummy layer to avoid P2V in P+ poly resistor
//
// 10) ESEXCL  - dummy layer to cover SRAM cell. Used in N2V/P2V mask generation
//
// 11) RLPPDMY - LPP high resistance poly resistor
//             Use "RLPPDMY" to exactly cover LPP high resistance
//             poly resistor area
//
//-----------------------------------------------------------------------------------
//
//                      CURRENT STATUS
//
//  RULES NOT IMPLEMENTED:
//
// The following rules are not coded in this rule file:
//
// rule                      description/explanation/alternate file
// ------------------------  ----------------------------------------------------
// Part I recommendations    Not coded (page 3 of spec.)
// 
// Antenna rules             Please refer to antenna DRC deck.
//
// Passivation rules         Please refer to Bound PAD DRC deck.
//
// Seal ring rules 	     not coded.
//
// Chip corner Power Line    Only ADP.1/ADP.S.1/ADP.C.1/ADP.C.2/ADP.E.1
// and Dummy PAD             /ADP.W.1/ADP.W.2/ADP.S.4/ADP.C.3/ADP.E.2 
//			     rules are coded.
//  
// * Guidelines implemented :
//
//     1) Partial I/O ESD GuideLine implemented: 4,5,6,9
//        Others don't be implemented because of guideline.
//
//     2) Partial LatchUp GuideLine implemented: 2,3
//        Others don't be implemented because of guideline.      
//
//     3) Dummy PAD Guidline implemented: ADP.S.2 ADP.W.3 ADP.W.4
//
//----------------------------------------------------------------------
// ATTENTION NOTICE !!!
//==================================================
//For Top metal check, the default is set to thick top metal.(#DEFINE THICK)
//If customer uses normal Top Metal, please add "//" on the line " #DEFINE THICK " to comment out

#DEFINE THICK

#IFDEF 5V
OPTION.HIGH_VOLTAGE.MM { @ HIGH_VOLTAGE == 5V is not allowed for Mixed_Signal process
  COPY CHIP
}
#ENDIF

// POLY checks
//=============

DRC UNSELECT CHECK PO.R.1A

_PO.W.1.MM { @ high resistance resistor width < 1.0
  INT HREP < 1.0 SINGULAR ABUT < 90 REGION
}

_PO.R.1A.MM { @ 90 degree gate not allowed/L and U shape gate are not allowed
      // 0.18 value is arbitrary, note the angle
  NORM_GATE_W = GATE_W OUTSIDE EDGE VARDMY
  EXT NORM_GATE_W < 0.18 ABUT == 90 INTERSECTING ONLY
  INT NORM_GATE_W < 0.18 ABUT == 90 INTERSECTING ONLY
}

// PP CHECKS
//============

DRC UNSELECT CHECK PP.E.6

_PP.E.6.MM { @ Min enc of POLY resistor by PP < 0.18
  ENC PORES PP < 0.18 ABUT <90 REGION
  ((RPO AND POLY) NOT IMP) NOT HRI
}

// NP CHECKS
//============

DRC UNSELECT CHECK NP.E.6


_NP.E.6.MM { @ Min enc of POLY resistor by NP < 0.18
  ENC PORES NP < 0.18 ABUT <90 REGION
  ((RPO AND POLY) NOT IMP) NOT HRI
}

// RPO checks
//===========

//RPO.C.1a is RPO.C.6 in logic DRM.

_RPO.O.1.MM { @ Min/Max. overlap of P+ on HRI for high-res 0.30
  X = POLY_ISO INTERACT HRI
  Y = RPO INSIDE EDGE X
  INT PP Y < 0.3 ABUT < 90
  Y OUTSIDE EDGE PP     // not overlap by P+ not allowed.
  Z = EXPAND EDGE Y INSIDE BY 0.30
  PPPO = PP AND POLY
  A = PPPO AND PORES
  B = A INTERACT HRI
  B NOT Z
}


#IFDEF THICK
// M6 checks
//=============
GROUP NORMAL_METAL6_CHECK M6.?   
DRC UNSELECT CHECK NORMAL_METAL6_CHECK

_M6T.W.1 { @ M6 width < 1.50
  INT M6 < 1.50 SINGULAR REGION ABUT < 90
}
_M6T.S.1 { @ M6 spacing < 1.50
  EXT M6 < 1.50 ABUT < 90 SINGULAR REGION
}

_M6T.E.1 { @ Min extension of a M6 region beyond a VIA5 region is 0.3 um
   ENC VIA5 M6 < 0.3 ABUT<90 SINGULAR OVERLAP OUTSIDE ALSO
}

_M6T.E.2 { @ Min extension of M6 end-of-line region beyond VIA5 region is 0.45um
   X = ENC [VIA5] M6 < 0.45 ABUT < 90 OPPOSITE // a narrow side
   INT X < 0.26 ABUT == 90 INTERSECTING ONLY      // adjacent narrow sides
}

M6T_NIND = M6xd NOT INDDMY 
_M6T.S.2 { @ Wide M6 (>16um) min. to M6 < 3.0um(exclude application for inductor)
//  M6T_NIND = M6xd NOT INDDMY 
  M6T_NIND_S8 = SHRINK (SHRINK (SHRINK (SHRINK M6T_NIND RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M6T_NIND_G8 = GROW (GROW (GROW (GROW M6T_NIND_S8 RIGHT BY 8) LEFT BY 8) TOP BY 8) BOTTOM BY 8
  M6T_NIND_Wide = M6T_NIND_G8 AND M6T_NIND

  M6T_NIND_Exp = SIZE M6T_NIND_Wide BY 1 INSIDE OF M6T_NIND STEP 1.05
  M6T_NIND_Branch = M6T_NIND_Exp NOT M6T_NIND_Wide
  M6T_NIND_Branch_edge = M6T_NIND_Branch COIN INSIDE EDGE M6T_NIND
  M6T_NIND_Check = M6T_NIND AND (SIZE M6T_NIND_Exp BY 3.0)
  M6T_NIND_Else = M6T_NIND_Check NOT INTERACT M6T_NIND_Exp
  M6T_NIND_Extend = M6T_NIND_Check NOT M6T_NIND_Exp 

  EXT M6T_NIND_Wide M6T_NIND_Else < 3.0 ABUT >0 <89.5 REGION
  EXT M6T_NIND_Branch_edge M6T_NIND_Else < 3.0 ABUT >0 <89.5 OPPOSITE REGION
  EXT M6T_NIND_Branch_edge M6T_NIND_Else < 3.0 ABUT >0 <89.5 CORNER REGION
  EXT M6T_NIND_Branch_edge M6T_NIND_Else < 3.0 ABUT >0 <89.5 PROJ==0 REGION
  A = EXT M6T_NIND_Exp < 3.0 ABUT > 0 < 89.5 SPACE REGION
  A NOT INTERACT M6T_NIND_Extend
}
_M6T.A.1 { @ Min M6 area region < 2.25
  AREA M6 < 2.25
}
_M6T.R.1 { @ Min density of M6T area < 30%(exclude application for inductor).
    CHIP_NOT_IND = CHIP NOT INDDMY
    DENSITY M6T_NIND CHIP_NOT_IND < 0.3 PRINT M6T_DENSITY.log
    [ AREA(M6T_NIND)/AREA(CHIP_NOT_IND) ]
}
_M6T.C.1 { @ min space from M6 as inductor to M6 < 50
  IM6 = M6 AND INDDMY
  RM6 = M6 NOT IM6
  EXT RM6 IM6  < 50 ABUT > 0 < 90 SINGULAR REGION
}
_M6T.E.3 { @ min extension INDDMY beyond M6 < 50
  ENC M6 INDDMY < 50 ABUT > 0 < 90 REGION
}

INDDMYI = SIZE INDDMY BY -7 //exclude M1 substrate pick up node
INDM = INDDMY AND M4
INDME = INDM COINCIDENT INSIDE EDGE INDDMY
INDDMYA = INDDMY WITH EDGE INDME <2
INDDMY3 = INDDMYA ENCLOSE M5 //for 3 terminals inductor(central tap)
INDDMY2 = INDDMY NOT INDDMY3 //for 2 terminals inductor
_M6T.I.1 { @ No via and metal layers inside INDDMY are allowed, except underpass vias and metal interconnect and the M1 substrate pick up node of inductor
    AND INDDMYI M1
    AND INDDMY VIA1	
    AND INDDMY M2
    AND INDDMY VIA2
    AND INDDMY M3
    AND INDDMY VIA3
    AND INDDMY2 M4
    AND INDDMY2 VIA4	    
}
_M6T.I.2 { @ Both active and passive devices not allow inside INDDMY besides guard ring
  AND INDDMY NWEL
  AND INDDMY POLY
  AND INDDMYI OD //exclude M1 substrate pick up node of inductor
}

#ENDIF  // end of #IFDEF THICK


#IFNDEF 5V

// NT_N
//======

DRC UNSELECT CHECK NT_N.I.3 NT_N.W.1 NT_N.E.1
NTN_NIND = NTN NOT INDDMY //exclude for inductor

_NT_N.I.1.MM {@ NT_N inside or cross over a deep N-well is not allowed
   NTN AND DNW
}
//NT_N.I.2.MM is checked by NT_N.C.2 in Logic section
//NT_N.I.3.MM is checked by NT_N.I.2 in Logic section
_NT_N.I.4.MM {@ A P+ region is not allowed to be put in an NT_N region excluding inductor
   NTN_NIND AND PP
}
//NT_N.I.5.MM is checked by NT_N.I.4 in Logic section
_NT_N.I.6.MM { @ OD in NTN region space to PO on field oxide < 0.26
   EXT NTN_OD POLY_ISO < 0.26 ABUT>0<90 SINGULAR
}   
_NT_N.W.1.MM {@ Minimum width of a NT_N region < 0.74
   INT NTN < 0.74 SINGULAR ABUT<90 REGION
}
//NT_N.W.2.MM is checked by NT_N.W.2 in Logic section
//NT_N.W.3.MM is checked by NT_N.W.2B in Logic section
//NT_N.S.1.MM is checked by NT_N.S.1 in Logic region
_NT_N.E.1.MM {@ Maximum and Minimum extension from NT_N region beyond an NP OD region excluding application of inductor
  A = NTN_NIND INTERACT OD
  B = OD INTERACT NTN_NIND
  C = SIZE B BY 0.26
  D = SIZE A BY -0.26
  A XOR C
  B XOR D
}
//NT_N.C.1.MM is checked by NT_N.C.1 in Logic region
//NT_N.C.2.MM is checked by NT_N.C.2 in Logic region
//NT_N.PO.1.MM is checked by NT_N.PO.1 in Logic region

#ENDIF  //#IFNDEF 5V


// DNW CHECKS
//==============
 
DNW.I.1 { @ DNW must be surrounded or fully covered by NW 
    DNW OUTSIDE EDGE NWEL
}

// DNW.I.4 is definition of RW
RWi = PWELi INSIDE DNWi
RW = RWi NOT INSIDE EXCL

DNW.I.6 { @ DNW is not allowed as a resistor
  AND DNW RWDMY
}
DNW.I.7 { @ NW resistor is not allowed to connect DNW
  INTERACT RNWEL DNW
  INTERACT NWRES DNW
}
DNW.W.1 { @ Min. DNW width < 3
  INT DNW < 3 ABUT<90 SINGULAR REGION
}
DNW.S.1 { @ Min. DNW space < 5
  EXT DNW < 5 ABUT<90 REGION
}
DNW.E.1 { @ Min. extension of NW beyond DNW < 1.5
  DNW_RW = DNW ENCLOSE RW //exclude DNW without RW
  ENC DNW_RW NWEL < 1.5 ABUT<90 SINGULAR REGION
}
DNW.O.1 { @ Min. overlap of NW into DNW < 2.0
  INT DNW NWEL < 2.0 ABUT<90 SINGULAR // MEASURE COINCIDENT
}
DNW.C.1 { @ Min. DNW space to NW < 3.5
  X = NWEL OUTSIDE DNW
  EXT DNW X < 3.5 ABUT<90 SINGULAR REGION
}
DNW.C.2_DNW.C.3 { @ Min. NWEL to NPOD in DNW spacing < 0.50
  ND_ACT = NPOD AND DNW
  EXT ND_ACT NONWR < 0.50 SINGULAR ABUT <90 OVERLAP  REGION
}
//DNW.C.3 is check by DNW.C.2
DNW.C.4 { @ Min. DNW space to N+OD outside NW < 3
  A = PWEL NOT DNW
  B = NPOD AND A
  EXT B DNW < 3.0 ABUT<90 SINGULAR
}  




//VTM_N
//=====
 
VTMN.I.1 {@ VTMN inside or cross over a deep N-well is not allowed
   VTMN AND DNW
}
VTMN.I.2 {@ VTMN inside or cross over a N-well or NT_N is not allowed
  // VTMN inside or cross over a N-well is checked by VTMN.C.2
   VTMN AND NTN
}
VTMN.I.3 {@ A P+ region is not allowed to be put in an VTMN region
   VTMN AND PP
}
VTMN.I.4 {@ A bent poly region is not allowed to put in an VTMN region
   VTMN_PO = POLY AND VTMN
   VERTEX VTMN_PO != 4
}
VTMN.I.5 { @ OD in VTMN region space to PO on field oxide < 0.26
   VTMN_OD = VTMN AND OD
   EXT VTMN_OD POLY_ISO < 0.26 ABUT>0<90 SINGULAR
}   
VTMN.W.1 { @ VTM_N width >= 0.74um
  INT VTMN < 0.74 ABUT < 90 SINGULAR
}
VTMN.W.2 { @ 1.8V blocked VTMN gate length >= 0.3um
  Z = GATE_W INSIDE EDGE VTMN
  INT Z < 0.3 ABUT < 90 REGION
}
VTMN.W.3 { @ 3.3V blocked VTMN gate length >= 0.6um
  Z = HV_NGATE_W INSIDE EDGE VTMN
  INT Z < 0.6 ABUT < 90 REGION
}
VTMN.S.1 { @ VTM_N space >= 0.44um
  EXT VTMN < 0.44 ABUT < 90 SINGULAR
}
VTMN.E.1 { @ VTM_N enclose N-act >= 0.26um
  ENC NACT VTMN < 0.26 OVERLAP ABUT < 90 SINGULAR
  VTMN INSIDE NACT
}
VTMN.C.1 { @ VTM_N to N-active space >= 0.7um
  EXT NACT VTMN < 0.7 ABUT < 90 SINGULAR
}
VTMN.C.2 { @ VTM_N to Nwell space >= 0.43um
  EXT VTMN NWEL < 0.43 ABUT < 90 OVERLAP INSIDE ALSO SINGULAR
}



// VTM_P
//======
 
VTMP.I.1 {@ VTMP inside or cross over a deep N-well is not allowed
   VTMP AND DNW
}
VTMP.I.2 {@ VTMP inside or cross over a P-well or NT_N is not allowed
  // VTMP inside or cross over a P-well is checked by VTMP.E.2
   VTMP AND NTN
}
VTMP.I.3 {@ A N+ region is not allowed to be put in an VTMP region
   VTMP AND NP
}
VTMP.I.4 {@ A bent poly region is not allowed to put in an VTMP region
   VTMP_PO = POLY AND VTMP
   VERTEX VTMP_PO != 4
}
VTMP.I.5 { @ OD in VTMP region space to PO on field oxide < 0.26
   VTMP_OD = VTMP AND OD
   EXT VTMP_OD POLY_ISO < 0.26 ABUT>0<90 SINGULAR
}   
VTMP.W.1 { @ VTM_P width >= 0.74um
  INT VTMP < 0.74 ABUT < 90 SINGULAR
}
VTMP.W.2 { @ 1.8V blocked VTMP gate length >= 0.25um
  Z = GATE_W INSIDE EDGE VTMP
  INT Z < 0.25 ABUT < 90 REGION
}
VTMP.S.1 { @ VTM_P space >= 0.44um
  EXT VTMP < 0.44 ABUT < 90 SINGULAR
}
VTMP.E.1 { @ VTM_P enclose P-act >= 0.26um
  ENC PACT VTMP < 0.26 OVERLAP ABUT < 90 SINGULAR
  VTMP INSIDE PACT
}
VTMP.C.1 { @ VTM_P to P-active space >= 0.7um
  EXT PACT VTMP < 0.7 ABUT < 90 SINGULAR
}
VTMP.C.2 { @ Nwell enclose VTM_P >= 0.43um
  ENC VTMP NWEL < 0.43 ABUT < 90 OVERLAP OUTSIDE ALSO SINGULAR
}
VTMP.R.1 { @ Only 1.8V blocked VTMP device is allowed.
  Z = ALL_GATE AND VTMP
  OD2 AND Z
}



//HRI  
//===  
 
HRI.W.1 { @ HRI width >= 0.44um.
  INT HRI < 0.44 ABUT < 90 SINGULAR
}
HRI.S.1 { @ HRI space >= 0.44um
  EXT HRI < 0.44 ABUT < 90 SINGULAR
}
HRI.C.1 { @ HRI to NP space >= 0.26um
  X = EXT HRI NP < 0.26 ABUT < 90 SINGULAR REGION
  X NOT INTERACT BUTT_PTAP
}
HRI.C.2 { @ HRI to PP space >= 0.26um
    EXT HRI PP < 0.26 ABUT<90 SINGULAR REGION
}
//HRI.C.3 ic checked by HRI.C.4
 
HRI.C.4 { @ HRI edge to gate >= 0.32um
  EXT ALL_GATE HRI < 0.32 REGION
}
HRI.E.1 { @ HRI enclose Po1-resistor >= 0.26um
  ENC PORES HRI < 0.26 ABUT < 90 SINGULAR
}
HRI.R.1 { @ Overlap of a NP and a HRI is not allowed.
  HRI AND NP
}
HRI.R.2 { @ Overlap of a OD and a HRI is not allowed.
  HRI AND OD
}  
HRI.A.1 { @ Minimum area of HRI < 0.3844
  HRI AREA < 0.3844
}



//
//   CTM CHECK
//=============== 


CTM.TITLE.1 { @ MiM capacitors should be placed between the top two interconnect metal layers
  COPY CTM2
  COPY CTM3
  COPY CTM4
} 
TCTM  = CTM5 INTERACT VIA5      // capacitor top plate
DCTM  = CTM5 NOT INTERACT VIA5  // dummy CTM


DPM5 = M5 INTERACT DCTM   // dummy M5 as a capacitor bottom plate
BPM5A= M5 INTERACT TCTM
BPM5 = BPM5A AND CTMDMY   // M5 as a capacitor bottom plate

CTM.W.1 { @ CTM (as capacitor top plate) width >= 4 um
  INT TCTM < 4 ABUT < 90 SINGULAR REGION
}
CTM.W.2 { @ Minimum width of a dummy CTM region >= 0.4um
  INT DCTM < 0.4 ABUT < 90 SINGULAR REGION
}
//CTM.W.3 is checked by CTM.W.2
CTM.S.1 { @ CTM (as capacitor top plate) space < 1.2 um
  EXT TCTM < 1.2 ABUT < 90 SINGULAR REGION
}
CTM.S.2 { @ Minimum space between a dummy CTM to a CTM regions.
  EXT DCTM TCTM < 0.8 ABUT < 90 SINGULAR REGION
  EXT DCTM < 0.8 ABUT < 90 SINGULAR REGION
}
CTM.S.3 { @ Minimum space between two Mn+1 of both dummy and real capacitor bottom plate < 0.8um
  EXT BPM5 DPM5 < 0.8 ABUT < 90 SINGULAR REGION
}
CTM.S.6 { @ Min. space between two Mn+1 as capacitor bottom plate < 0.8 um
  EXT BPM5 < 0.8 ABUT < 90 SINGULAR REGION
}
CTM.E.1 { @ CTM enclose Via < 0.24 um
  ENC VIA5 CTM5 < 0.24 ABUT<90 OVERLAP SINGULAR REGION
}
CTM.E.2 { @ bottom plate Metal enclose Via < 0.12 um
  ENC VIA4 BPM5 < 0.12 ABUT<90 SINGULAR REGION
  ENC VIA5 BPM5 < 0.12 ABUT<90 SINGULAR REGION
}
CTM.E.3 { @ bottom plate Metal enclose CTM < 0.4 um
  ENC CTM5 M5 < 0.4 ABUT<90 SINGULAR OUTSIDE ALSO REGION 
}
CTM.C.1 { @ CTM space to Via < 0.4 um
  EXT VIA4 CTM5 < 0.4 ABUT<90 SINGULAR REGION
  EXT VIA5 CTM5 < 0.4 ABUT<90 SINGULAR REGION
}
//CTM.R.1 is checked by CTM.E.3
CTM.R.2 { @ Min. density of a CTM < 3%
   DENSITY CTM5i > 0 < 0.03 PRINT CTM5i.density
}
//CTM.R.3 is no need to be checked
 
CTMV5 = VIA5 AND CTM5            // via locate on CTM
CBMV5 = (VIA5 AND BPM5) NOT CTM5 // via locate on bottom plate
 
CTM.S.4 { @ min space between two vias locate on CTM < 2um
  EXT CTMV5 < 2 ABUT < 90 SINGULAR REGION
}
CONNECT CTMV5 TCTM
CTM.S.4a { @ min vias density on CTM < 1%
  NET AREA RATIO CTMV5 TCTM < 0.01
  [
      AREA(CTMV5) / AREA(TCTM)
  ] RDB VIA5_DENSITY.log CTMV5 TCTM
}

DISCONNECT
CTM.S.5 { @ min space between two vias locate on buttom plate < 4um
  EXT CBMV5 < 4 ABUT < 90 SINGULAR REGION
}
CTM.R.4 { @ dummy layer enclose bottom plate metal < 2um.
    ENC BPM5A CTMDMY < 2 ABUT < 90 SINGULAR REGION
    TCTM NOT CTMDMY   // CTMDMY is needed to sepcify MiM capacitor region and separates from metal interconnection region for DRC purpose.	
}
CTM.I.1 { @ max width of a CTM region as a capacitor top plate > 30um
  ENCLOSE RECTANGLE TCTM 0.01 30.01 ORTHOGONAL ONLY
}
CTM.I.2 { @ max width of a capacitor bottom plate > 35um
  SIZE BPM5 BY 17.5 UNDEROVER
}
CTM.I.3 { @ ViaN under CTM is not allowed.
  VIA4 AND CTM5
}
CTM.I.4 { @ device under CTM is not allowed
  (POLY OR RNWEL) AND CTM5
}
CTM.A.1 { @ Min. area of CTM region 0.202
  AREA CTM5 < 0.202
}
